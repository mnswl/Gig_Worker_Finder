{"version":3,"file":"static/js/14.8282ba13.chunk.js","mappings":"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","sources":["pages/Login.jsx","googleAuth.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport api from '../api';\r\nimport { promptGoogleLogin } from '../googleAuth';\r\nimport '../styles/Register.css';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const { t, i18n } = useTranslation();\r\n  const changeLanguage = (lng) => { i18n.changeLanguage(lng); localStorage.setItem('lng', lng); };\r\n  const [form, setForm] = useState({ email: '', password: '' });\r\n  // role for new Google sign-ups\r\n  const [role, setRole] = useState('worker');\r\n  const [showPwd, setShowPwd] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleGoogle = () => {\r\n    promptGoogleLogin(async (idToken) => {\r\n      try {\r\n        const res = await api.post('/auth/google', { idToken, role });\r\n        const user = res.data.user;\r\n        if(user.emailVerified || user.phoneVerified){\r\n          localStorage.setItem('token', res.data.token);\r\n          localStorage.setItem('role', user.role);\r\n          navigate('/dashboard');\r\n        } else {\r\n          sessionStorage.setItem('token', res.data.token);\r\n          sessionStorage.setItem('role', user.role);\r\n          navigate('/verify', { state: { email: user.email, autoEmail: true } });\r\n        }\r\n      } catch (e) {\r\n        setError(e.response?.data?.msg || 'Google sign-in failed');\r\n      }\r\n    });\r\n  };\r\n\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    return (\r\n      <div className=\"register-wrapper\" data-aos=\"fade-up\">\r\n        <div className=\"d-none\" style={{top:10,right:10}}>\r\n        <button className=\"btn btn-light dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">üåê</button>\r\n        <ul className=\"dropdown-menu dropdown-menu-end\">\r\n          <li><button className=\"dropdown-item\" onClick={()=>changeLanguage('en')}>English</button></li>\r\n          <li><button className=\"dropdown-item\" onClick={()=>changeLanguage('si')}>‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω</button></li>\r\n        </ul>\r\n      </div>\r\n      <img src=\"/logo.png\" alt=\"Gig Worker Finder\" className=\"register-logo\" />\r\n        <div className=\"alert alert-warning mt-4\">{t('alreadyLoggedIn')}</div>\r\n        <Link className=\"btn btn-primary me-2 mt-3\" to=\"/dashboard\">{t('goToDashboard')}</Link>\r\n        <button className=\"btn btn-outline-danger mt-3\" onClick={()=>{localStorage.removeItem('token');localStorage.removeItem('role');navigate('/login');}}>{t('logout')}</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await api.post('/auth/login', form);\r\n      const user = res.data.user;\r\n// treat as verified if either contact method verified\r\n      const verified = user.emailVerified || user.phoneVerified;      \r\n      if(verified){\r\n        localStorage.setItem('token', res.data.token);\r\n        localStorage.setItem('role', user.role);\r\n        localStorage.setItem('userId', user.id);\r\n      } else {\r\n        sessionStorage.setItem('token', res.data.token);\r\n        sessionStorage.setItem('role', user.role);\r\n        sessionStorage.setItem('userId', user.id);\r\n        navigate('/verify', { state: { email: user.email, phone: user.phone, autoEmail: !user.emailVerified && !user.phoneVerified } });\r\n        return;\r\n      }\r\n      // Redirect based on role\r\n      if (user.role === 'admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.msg || 'Login failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-wrapper\" data-aos=\"fade-up\">\r\n      <div className=\"d-none\" style={{top:10,right:10}}>\r\n        <button className=\"btn btn-light dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">üåê</button>\r\n        <ul className=\"dropdown-menu dropdown-menu-end\">\r\n          <li><button className=\"dropdown-item\" onClick={()=>changeLanguage('en')}>English</button></li>\r\n          <li><button className=\"dropdown-item\" onClick={()=>changeLanguage('si')}>‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω</button></li>\r\n        </ul>\r\n      </div>\r\n      <img src=\"/logo.png\" alt=\"Gig Worker Finder\" className=\"register-logo\" />\r\n      <h2 className=\"h4 fw-bold mb-1\">{t('welcomeBack')}</h2>\r\n      <p className=\"text-muted mb-4\" style={{fontSize:'0.9rem'}}>{t('loginContinue')}</p>\r\n\r\n      <div className=\"mb-2 text-start\" style={{maxWidth:'400px',margin:'0 auto'}}>\r\n        <label className=\"form-label\">{t('role') || 'Role'}</label>\r\n        <select className=\"form-select\" value={role} onChange={e=>setRole(e.target.value)}>\r\n          <option value=\"worker\">{t('worker') || 'Freelancer'}</option>\r\n          <option value=\"employer\">{t('employer') || 'Client'}</option>\r\n        </select>\r\n      </div>\r\n      <button className=\"btn btn-outline-secondary w-100 d-flex align-items-center justify-content-center mb-3\" onClick={handleGoogle}> \r\n        <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google\" style={{height:18,width:18}} className=\"me-2\" />\r\n        {t('signInGoogle')}\r\n      </button>\r\n      <div className=\"register-divider\">{t('or')}</div>\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3 text-start\">\r\n          <label className=\"form-label\">{t('emailOrPhone')}</label>\r\n          <input type=\"text\" name=\"email\" className=\"form-control\" value={form.email} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"mb-3 text-start\">\r\n          <label className=\"form-label\">{t('password')}</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type={showPwd ? 'text' : 'password'}\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <button type=\"button\" className=\"btn btn-outline-secondary\" tabIndex=\"-1\" onClick={() => setShowPwd(p=>!p)}>\r\n              {showPwd ? 'üôà' : 'üëÅ'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary w-100\">{t('login')}</button>\r\n      </form>\r\n      <p className=\"mt-3\" style={{fontSize:'0.9rem'}}>\r\n        {t('noAccount')} <Link to=\"/register\">{t('register')}</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/* Google Identity utility: safely loads Google Identity Services script and prompts One Tap. */\r\nexport const promptGoogleLogin = (onSuccess, onError) => {\r\n  const CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n  if (!CLIENT_ID) {\r\n    const err = new Error('Google Client ID (REACT_APP_GOOGLE_CLIENT_ID) is not set');\r\n    console.error(err);\r\n    if (onError) onError(err);\r\n    return;\r\n  }\r\n\r\n  const doPrompt = () => {\r\n    try {\r\n      /* global google */\r\n      window.google.accounts.id.initialize({\r\n        client_id: CLIENT_ID,\r\n        callback: ({ credential }) => onSuccess(credential),\r\n      });\r\n      window.google.accounts.id.prompt();\r\n    } catch (e) {\r\n      console.error('Failed to initialize Google Accounts', e);\r\n      if (onError) onError(e);\r\n    }\r\n  };\r\n\r\n  // If script already present, run immediately\r\n  if (window.google && window.google.accounts) {\r\n    doPrompt();\r\n    return;\r\n  }\r\n\r\n  // Else try to load the script dynamically and then prompt\r\n  const existing = document.getElementById('gsi-script');\r\n  if (existing) {\r\n    existing.addEventListener('load', doPrompt, { once: true });\r\n    return;\r\n  }\r\n  const script = document.createElement('script');\r\n  script.src = 'https://accounts.google.com/gsi/client';\r\n  script.async = true;\r\n  script.defer = true;\r\n  script.id = 'gsi-script';\r\n  script.onload = doPrompt;\r\n  script.onerror = (e) => {\r\n    console.error('Failed to load Google Identity script', e);\r\n    if (onError) onError(e);\r\n  };\r\n  document.head.appendChild(script);\r\n};\r\n"],"names":["navigate","useNavigate","t","i18n","useTranslation","changeLanguage","lng","localStorage","setItem","form","setForm","useState","email","password","role","setRole","showPwd","setShowPwd","error","setError","getItem","_jsxs","className","children","style","top","right","_jsx","type","onClick","src","alt","Link","to","removeItem","handleChange","e","target","name","value","fontSize","maxWidth","margin","onChange","handleGoogle","promptGoogleLogin","async","res","api","post","idToken","user","data","emailVerified","phoneVerified","token","sessionStorage","state","autoEmail","_e$response","_e$response$data","response","msg","height","width","onSubmit","preventDefault","id","phone","err","_err$response","_err$response$data","required","tabIndex","p","onSuccess","onError","CLIENT_ID","process","doPrompt","window","google","accounts","initialize","client_id","callback","_ref","credential","prompt","console","existing","document","getElementById","addEventListener","once","script","createElement","defer","onload","onerror","head","appendChild"],"sourceRoot":""}