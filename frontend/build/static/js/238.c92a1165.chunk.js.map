{"version":3,"file":"static/js/238.c92a1165.chunk.js","mappings":"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","sources":["utils/currency.js","hooks/useExchangeRates.js","data/options.js","components/AVExchangeRateChart.jsx","pages/CurrencyConverter.jsx"],"sourcesContent":["// Utility functions for handling currency symbols and conversion\r\n\r\nconst currencySymbols = {\r\n  AUD: 'A$',\r\n  CAD: 'C$',\r\n  LKR: 'Rs.',\r\n  USD: '$',\r\n  INR: '₹',\r\n  EUR: '€',\r\n  GBP: '£',\r\n};\r\n\r\nexport const getCurrencySymbol = (code) => currencySymbols[code] || code;\r\n\r\n/**\r\n * Convert an amount from one currency to another using rates where the base currency is `base`\r\n * @param {number} amount  original amount\r\n * @param {string} from    currency code of the amount\r\n * @param {string} to      desired currency code\r\n * @param {object} rates   rates object where keys are other currency codes and values are their rate compared to base\r\n * @param {string} base    base currency of the `rates` object (default `to`)\r\n * @returns {number}\r\n */\r\nexport const convertAmount = (amount, from, to, rates, base = to) => {\r\n  if (!rates || from === to) return amount;\r\n\r\n  // If rates are based on the target currency (default behaviour in our app)\r\n  if (base === to) {\r\n    const rate = rates[from];\r\n    if (!rate) return amount;\r\n    return amount / rate; // because 1 to = rate[from] from\r\n  }\r\n\r\n  // Otherwise compute via cross-rate if available\r\n  const rateToBase = base === from ? 1 : rates[from];\r\n  const rateTargetToBase = base === to ? 1 : rates[to];\r\n  if (!rateToBase || !rateTargetToBase) return amount;\r\n  const amountInBase = amount / rateToBase;\r\n  return amountInBase * rateTargetToBase;\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * React hook to load (and cache) daily foreign-exchange rates for a given base currency.\r\n * Rates are stored in localStorage under the key `fx_rates_<BASE>` so we only hit the\r\n * public API once per day.\r\n *\r\n * @param {string} base ISO 4217 currency code (e.g. \"USD\")\r\n * @returns {{ rates: object|null, loading: boolean, error: string|null }}\r\n */\r\nexport default function useExchangeRates(base) {\r\n  const [rates, setRates] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!base) return;\r\n\r\n    const STORAGE_KEY = `fx_rates_${base}`;\r\n    const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD\r\n\r\n    const cachedRaw = localStorage.getItem(STORAGE_KEY);\r\n    if (cachedRaw) {\r\n      try {\r\n        const cached = JSON.parse(cachedRaw);\r\n        if (cached.date === today && cached.data) {\r\n          setRates(cached.data);\r\n          setLastUpdated(new Date(cached.ts || cached.date));\r\n          setLoading(false);\r\n          return; // fresh cache\r\n        }\r\n      } catch (_) {\r\n        // fall through – bad cache format\r\n      }\r\n    }\r\n\r\n    /** Fetch fresh rates from public providers (primary → open.er-api.com, fallback → exchangerate.host) */\r\n    const fetchRates = async () => {\r\n      setLoading(true);\r\n      // Build provider list: check env first (comma-separated URLs with {BASE} placeholder)\r\n      const envList = (process.env.REACT_APP_FX_PROVIDERS || '').split(',').map(s=>s.trim()).filter(Boolean);\r\n      const dynamicProviders = envList.map(url=>({\r\n        name:url,\r\n        buildUrl:(b)=> url.replace('{BASE}', b),\r\n        extract:(json)=> json?.rates || json?.conversion_rates || json?.quotes,\r\n      }));\r\n\r\n      const providers = dynamicProviders.length > 0 ? dynamicProviders : [\r\n        {\r\n          name: 'open.er-api.com',\r\n          buildUrl: (b) => `https://open.er-api.com/v6/latest/${b}`,\r\n          extract: (json) => json?.rates || json?.conversion_rates || json?.quotes,\r\n        },\r\n        {\r\n          name: 'exchangerate.host',\r\n          buildUrl: (b) => `https://api.exchangerate.host/latest?base=${b}`,\r\n          extract: (json) => json?.rates || json?.conversion_rates || json?.quotes,\r\n        },\r\n      ];\r\n\r\n      let lastErr = null;\r\n      for (const p of providers) {\r\n        try {\r\n          const res = await fetch(p.buildUrl(base));\r\n          if (!res.ok) throw new Error(`${p.name} HTTP ${res.status}`);\r\n          const json = await res.json();\r\n          let r = p.extract(json);\r\n          const providerBase = json.base || json.base_code || json.source;\r\n          if (providerBase && providerBase !== base && r && r[base]) {\r\n            const factor = r[base]; // rate of requested base vs providerBase\r\n            const norm = {};\r\n            for (const [k, v] of Object.entries(r)) {\r\n              norm[k] = v / factor; // convert so that requested base becomes 1\r\n            }\r\n            r = norm;\r\n          }\r\n          // Handle currencylayer-style 'quotes' object (keys like \"USDEUR\")\r\n          if (r && typeof r === 'object' && !Array.isArray(r)) {\r\n            const keys = Object.keys(r);\r\n            if (keys.length && keys.every(k => k.startsWith(base))) {\r\n              const stripped = {};\r\n              for (const k of keys) {\r\n                stripped[k.slice(base.length)] = r[k];\r\n              }\r\n              r = stripped;\r\n            }\r\n          }\r\n          if (!r) throw new Error(`${p.name} missing rates`);\r\n          setRates(r);\r\n          setLastUpdated(new Date());\r\n          localStorage.setItem(STORAGE_KEY, JSON.stringify({ date: today, ts: new Date().toISOString(), data: r }));\r\n          setError(null);\r\n          return; // success\r\n        } catch (err) {\r\n          console.warn(`Provider ${p.name} failed`, err);\r\n          lastErr = err;\r\n        }\r\n      }\r\n      // if we reach here, all providers failed\r\n      setError(lastErr?.message || 'All FX providers failed');\r\n    };\r\n\r\n    fetchRates();\r\n  }, [base]);\r\n\r\n  return { rates, loading, error, lastUpdated };\r\n}\r\n","// Auto-generated list of countries & currencies\r\nexport const countries = [\r\n  \"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Antigua and Barbuda\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Côte d'Ivoire\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czech Republic\",\"Democratic Republic of the Congo\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Fiji\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Grenada\",\"Guatemala\",\"Guinea\",\"Guinea-Bissau\",\"Guyana\",\"Haiti\",\"Holy See\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Qatar\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Kitts and Nevis\",\"Saint Lucia\",\"Saint Vincent and the Grenadines\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"Sudan\",\"Suriname\",\"Sweden\",\"Switzerland\",\"Syria\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor-Leste\",\"Togo\",\"Tonga\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Venezuela\",\"Vietnam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"\r\n];\r\n\r\nexport const currencies = [\r\n  \"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHF\",\"CLP\",\"CNY\",\"COP\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"FOK\",\"GBP\",\"GEL\",\"GGP\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"IMP\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JEP\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KID\",\"KMF\",\"KRW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRU\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STN\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TVD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"UYU\",\"UZS\",\"VES\",\"VND\",\"VUV\",\"WST\",\"XAF\",\"XCD\",\"XOF\",\"XPF\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"\r\n];\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport Chart from 'chart.js/auto';\r\n\r\n// Draw vertical dashed line at hovered point\r\nconst hoverLinePlugin = {\r\n  id: 'hoverLine',\r\n  afterDraw(chart) {\r\n    if (chart.tooltip && chart.tooltip._active && chart.tooltip._active.length) {\r\n      const ctx = chart.ctx;\r\n      const activePoint = chart.tooltip._active[0];\r\n      const x = activePoint.element.x;\r\n      const topY = chart.scales.y.top;\r\n      const bottomY = chart.scales.y.bottom;\r\n      ctx.save();\r\n      ctx.setLineDash([4, 4]);\r\n      ctx.strokeStyle = chart.options.hoverLineColor || 'rgba(55,65,81,0.5)';\r\n      ctx.lineWidth = chart.options.hoverLineWidth || 1.5;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, topY);\r\n      ctx.lineTo(x, bottomY);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n  },\r\n};\r\nChart.register(hoverLinePlugin);\r\n\r\n/**\r\n * Exchange-rate trend chart using Alpha Vantage FX_DAILY API.\r\n * Requires REACT_APP_ALPHA_VANTAGE_KEY to be set in env (free key from https://www.alphavantage.co).\r\n * Shows last 30 closing prices for the selected currency pair.\r\n */\r\nexport default function AVExchangeRateChart({ from, to }) {\r\n  const { darkMode } = useTheme();\r\n  const canvasRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Helper to render the line chart (reused by both primary and fallback data paths)\r\n  const renderChart = (labels, values) => {\r\n    if (!canvasRef.current) return;\r\n    // Destroy previous instance\r\n    if (chartRef.current) chartRef.current.destroy();\r\n\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\r\n    if (darkMode) {\r\n      gradient.addColorStop(0, 'rgba(74,222,128,0.25)');\r\n      gradient.addColorStop(1, 'rgba(17,24,39,0)');\r\n    } else {\r\n      gradient.addColorStop(0, 'rgba(34,197,94,0.25)');\r\n      gradient.addColorStop(1, 'rgba(255,255,255,0)');\r\n    }\r\n\r\n    chartRef.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${from} → ${to}`,\r\n            data: values,\r\n            pointRadius: 0,\r\n            pointHoverRadius: 6,\r\n            pointHoverBorderWidth: 2,\r\n            pointHoverBackgroundColor: '#ffffff',\r\n            pointHoverBorderColor: '#4ade80',\r\n            fill: true,\r\n            borderColor: darkMode ? '#4ade80' : '#16a34a',\r\n            backgroundColor: gradient,\r\n            tension: 0.35,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        hoverLineColor: darkMode ? 'rgba(255,255,255,0.3)' : 'rgba(55,65,81,0.5)',\r\n        hoverLineWidth: darkMode ? 1 : 1.5,\r\n        responsive: true,\r\n        interaction: { mode: 'index', intersect: false },\r\n        elements: { point: { radius: 0, hoverRadius: 5, hitRadius: 12 } },\r\n        scales: { x: { ticks: { autoSkip: true, maxTicksLimit: 8 } } },\r\n        plugins: {\r\n          legend: { display: false },\r\n          tooltip: {\r\n            yAlign: 'top',\r\n            xAlign: 'center',\r\n            backgroundColor: darkMode ? '#111827' : '#f3f4f6',\r\n            titleColor: darkMode ? '#d1d5db' : '#111827',\r\n            bodyColor: darkMode ? '#ffffff' : '#374151',\r\n            padding: 8,\r\n            displayColors: false,\r\n            callbacks: {\r\n              title: (ctx) => ctx[0].parsed.y.toFixed(2),\r\n              label: (ctx) => {\r\n                const date = ctx.label;\r\n                return new Date(date).toLocaleDateString('en-US', {\r\n                  weekday: 'short',\r\n                  day: 'numeric',\r\n                  month: 'short',\r\n                });\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!from || !to || from === to) return;\r\n\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const apiKey = process.env.REACT_APP_ALPHA_VANTAGE_KEY;\r\n        if (!apiKey) throw new Error('Missing Alpha Vantage API key');\r\n\r\n        const url = `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${from}&to_symbol=${to}&outputsize=compact&apikey=${apiKey}`;\r\n        const res = await fetch(url);\r\n        if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n        const json = await res.json();\r\n        const series = json['Time Series FX (Daily)'];\r\n        if (!series) {\r\n          // Fallback to exchangerate.host timeseries for the last 30 days\r\n          const end = new Date().toISOString().substring(0, 10);\r\n          const start = new Date(Date.now() - 29 * 86400000).toISOString().substring(0, 10);\r\n          const fallbackUrl = `https://api.exchangerate.host/timeseries?start_date=${start}&end_date=${end}&base=${from}&symbols=${to}`;\r\n          const fbRes = await fetch(fallbackUrl);\r\n          const fbJson = await fbRes.json();\r\n          let success = fbJson && fbJson.success;\r\n\r\n          // Helper to validate we actually have usable rates\r\n          const hasValidRates = (json, base, sym) =>\r\n            json && json.rates && Object.values(json.rates)[0] && Object.values(json.rates)[0][sym] !== undefined;\r\n\r\n          if (!success || !hasValidRates(fbJson, from, to)) {\r\n            // Try inverse (to->from) and mathematically invert the rate\r\n            const inverseUrl = `https://api.exchangerate.host/timeseries?start_date=${start}&end_date=${end}&base=${to}&symbols=${from}`;\r\n            const invRes = await fetch(inverseUrl);\r\n            const invJson = await invRes.json();\r\n            if (invJson.success && hasValidRates(invJson, to, from)) {\r\n              const invLabels = Object.keys(invJson.rates).sort();\r\n              const invValues = invLabels.map(d => invJson.rates[d][from]);\r\n              // invert each value to get from->to\r\n              const values = invValues.map(v => (v ? 1 / v : null));\r\n              renderChart(invLabels, values);\r\n              return;\r\n            }\r\n            // Final fallback: Frankfurter API (no key, last ~365 days)\r\n            try {\r\n              const frUrl = `https://api.frankfurter.app/${start}..${end}?from=${from}&to=${to}`;\r\n              const frRes = await fetch(frUrl);\r\n              const frJson = await frRes.json();\r\n              if (frJson && frJson.rates) {\r\n                const frLabels = Object.keys(frJson.rates).sort();\r\n                const frValues = frLabels.map(d => frJson.rates[d][to]);\r\n                if (frValues.some(v => v !== undefined)) {\r\n                  renderChart(frLabels, frValues);\r\n                  return;\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // ignore and fall through to error\r\n            }\r\n            setError('Historical data not available for this currency pair.');\r\n            return;\r\n          }\r\n\r\n          const labels = Object.keys(fbJson.rates).sort();\r\n          const values = labels.map(d => fbJson.rates[d][to]);\r\n          renderChart(labels, values);\r\n          return;\r\n        }\r\n\r\n        // Take the most recent 30 entries and render chart\r\n        const sortedDates = Object.keys(series).sort().reverse().slice(0, 30).reverse();\r\n        const labels = sortedDates;\r\n        const values = sortedDates.map(d => parseFloat(series[d]['4. close']));\r\n        renderChart(labels, values);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      if (chartRef.current) chartRef.current.destroy();\r\n    };\r\n  }, [from, to, darkMode]);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      {loading && <p className=\"text-muted small\">Loading chart…</p>}\r\n      {error && <p className=\"text-danger small\">{error}</p>}\r\n      <canvas ref={canvasRef} style={{ width: '100%', minHeight: 200 }} />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport useExchangeRates from '../hooks/useExchangeRates';\r\nimport { currencies } from '../data/options';\r\nimport { getCurrencySymbol } from '../utils/currency';\r\nimport AVExchangeRateChart from '../components/AVExchangeRateChart';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function CurrencyConverter() {\r\n  const { t } = useTranslation();\r\n\r\n  // State\r\n  const [amount, setAmount] = useState('');\r\n  const [fromCurr, setFromCurr] = useState('USD');\r\n  const [toCurr, setToCurr] = useState('LKR');\r\n\r\n  // Fetch exchange rates with the *source* currency as the base so we can directly multiply\r\n  const { rates, lastUpdated } = useExchangeRates(fromCurr);\r\n\r\n  // Currency codes list (already array)\r\n  const currencyCodes = currencies;\r\n\r\n  // Swap currencies\r\n  const handleSwapCurrencies = () => {\r\n    setFromCurr(prevFrom => {\r\n      setToCurr(prevFrom);\r\n      return toCurr;\r\n    });\r\n  }\r\n\r\n  const numericAmount = amount === '' ? 1 : parseFloat(amount);\r\n  const displayAmount = numericAmount.toLocaleString(undefined, { minimumFractionDigits: 2 });\r\n  const converted = (rates && rates[toCurr] && !isNaN(numericAmount))\r\n    ? (numericAmount * rates[toCurr]).toFixed(2)\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"container py-5\" data-aos=\"fade-up\">\r\n      <h1 className=\"mb-4 text-center\">{t('currencyConverter', 'Currency Converter')}</h1>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card p-4 shadow-sm glass-card\">\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"amount\" className=\"form-label fw-semibold\">{t('amount', 'Amount')}</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                className=\"form-control\"\r\n                value={amount}\r\n                onChange={e => setAmount(e.target.value)}\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-flex gap-2 mb-3 align-items-end\">\r\n              <div className=\"flex-fill\">\r\n                <label className=\"form-label fw-semibold\">{t('from', 'From')}</label>\r\n                <select className=\"form-select\" value={fromCurr} onChange={e => setFromCurr(e.target.value)}>\r\n                  {currencyCodes.map(code => (\r\n                    <option key={code} value={code}>{code}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={handleSwapCurrencies} aria-label={t('switch', 'Switch')}>\r\n                ⇄\r\n              </button>\r\n              <div className=\"flex-fill\">\r\n                <label className=\"form-label fw-semibold\">{t('to', 'To')}</label>\r\n                <select className=\"form-select\" value={toCurr} onChange={e => setToCurr(e.target.value)}>\r\n                  {currencyCodes.map(code => (\r\n                    <option key={code} value={code}>{code}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Historical trend chart */}\r\n            <AVExchangeRateChart from={fromCurr} to={toCurr} />\r\n\r\n            <div className=\"mt-4 text-center\">\r\n              {rates ? (\r\n                <>\r\n                  <h4>\r\n                    {getCurrencySymbol(fromCurr)} {displayAmount}\r\n                    {' = '}\r\n                    {getCurrencySymbol(toCurr)} {converted}\r\n                  </h4>\r\n                  {lastUpdated && (\r\n                    <p className=\"text-muted small mb-0\">\r\n                      {t('ratesUpdated', 'Rates updated at')}: {lastUpdated.toLocaleString()}\r\n                    </p>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <p>{t('loading', 'Loading exchange rates...')}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["currencySymbols","AUD","CAD","LKR","USD","INR","EUR","GBP","getCurrencySymbol","code","convertAmount","amount","from","to","rates","base","arguments","length","undefined","rate","rateToBase","rateTargetToBase","useExchangeRates","setRates","useState","lastUpdated","setLastUpdated","loading","setLoading","error","setError","useEffect","STORAGE_KEY","today","Date","toISOString","slice","cachedRaw","localStorage","getItem","cached","JSON","parse","date","data","ts","_","async","_lastErr","dynamicProviders","process","split","map","s","trim","filter","Boolean","url","name","buildUrl","b","replace","extract","json","conversion_rates","quotes","providers","lastErr","p","res","fetch","ok","Error","status","r","providerBase","base_code","source","factor","norm","k","v","Object","entries","Array","isArray","keys","every","startsWith","stripped","setItem","stringify","err","console","warn","message","fetchRates","countries","currencies","hoverLinePlugin","id","afterDraw","chart","tooltip","_active","ctx","x","element","topY","scales","y","top","bottomY","bottom","save","setLineDash","strokeStyle","options","hoverLineColor","lineWidth","hoverLineWidth","beginPath","moveTo","lineTo","stroke","restore","AVExchangeRateChart","_ref","darkMode","useTheme","canvasRef","useRef","chartRef","renderChart","labels","values","current","destroy","getContext","gradient","createLinearGradient","canvas","height","addColorStop","Chart","type","datasets","label","pointRadius","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","fill","borderColor","backgroundColor","tension","responsive","interaction","mode","intersect","elements","point","radius","hoverRadius","hitRadius","ticks","autoSkip","maxTicksLimit","plugins","legend","display","yAlign","xAlign","titleColor","bodyColor","padding","displayColors","callbacks","title","parsed","toFixed","toLocaleDateString","weekday","day","month","apiKey","series","end","substring","start","now","fallbackUrl","fbRes","fbJson","success","hasValidRates","sym","inverseUrl","invRes","invJson","invLabels","sort","d","frUrl","frRes","frJson","frLabels","frValues","some","e","sortedDates","reverse","parseFloat","fetchData","_jsxs","className","children","_jsx","ref","style","width","minHeight","register","CurrencyConverter","t","useTranslation","setAmount","fromCurr","setFromCurr","toCurr","setToCurr","currencyCodes","numericAmount","displayAmount","toLocaleString","minimumFractionDigits","converted","isNaN","htmlFor","value","onChange","target","min","step","onClick","handleSwapCurrencies","prevFrom","_Fragment"],"sourceRoot":""}