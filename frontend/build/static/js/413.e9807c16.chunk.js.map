{"version":3,"file":"static/js/413.e9807c16.chunk.js","mappings":"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","sources":["utils/currency.js","hooks/useExchangeRates.js","../node_modules/@heroicons/react/24/solid/esm/BookmarkIcon.js","animations/jobCard.js","animations/buttonRipple.js","components/Modal.jsx","pages/Dashboard.jsx","hooks/useCardStagger.js","utils/animations.js","data/options.js"],"sourcesContent":["// Utility functions for handling currency symbols and conversion\r\n\r\nconst currencySymbols = {\r\n  AUD: 'A$',\r\n  CAD: 'C$',\r\n  LKR: 'Rs.',\r\n  USD: '$',\r\n  INR: '₹',\r\n  EUR: '€',\r\n  GBP: '£',\r\n};\r\n\r\nexport const getCurrencySymbol = (code) => currencySymbols[code] || code;\r\n\r\n/**\r\n * Convert an amount from one currency to another using rates where the base currency is `base`\r\n * @param {number} amount  original amount\r\n * @param {string} from    currency code of the amount\r\n * @param {string} to      desired currency code\r\n * @param {object} rates   rates object where keys are other currency codes and values are their rate compared to base\r\n * @param {string} base    base currency of the `rates` object (default `to`)\r\n * @returns {number}\r\n */\r\nexport const convertAmount = (amount, from, to, rates, base = to) => {\r\n  if (!rates || from === to) return amount;\r\n\r\n  // If rates are based on the target currency (default behaviour in our app)\r\n  if (base === to) {\r\n    const rate = rates[from];\r\n    if (!rate) return amount;\r\n    return amount / rate; // because 1 to = rate[from] from\r\n  }\r\n\r\n  // Otherwise compute via cross-rate if available\r\n  const rateToBase = base === from ? 1 : rates[from];\r\n  const rateTargetToBase = base === to ? 1 : rates[to];\r\n  if (!rateToBase || !rateTargetToBase) return amount;\r\n  const amountInBase = amount / rateToBase;\r\n  return amountInBase * rateTargetToBase;\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n * React hook to load (and cache) daily foreign-exchange rates for a given base currency.\r\n * Rates are stored in localStorage under the key `fx_rates_<BASE>` so we only hit the\r\n * public API once per day.\r\n *\r\n * @param {string} base ISO 4217 currency code (e.g. \"USD\")\r\n * @returns {{ rates: object|null, loading: boolean, error: string|null }}\r\n */\r\nexport default function useExchangeRates(base) {\r\n  const [rates, setRates] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!base) return;\r\n\r\n    const STORAGE_KEY = `fx_rates_${base}`;\r\n    const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD\r\n\r\n    const cachedRaw = localStorage.getItem(STORAGE_KEY);\r\n    if (cachedRaw) {\r\n      try {\r\n        const cached = JSON.parse(cachedRaw);\r\n        if (cached.date === today && cached.data) {\r\n          setRates(cached.data);\r\n          setLastUpdated(new Date(cached.ts || cached.date));\r\n          setLoading(false);\r\n          return; // fresh cache\r\n        }\r\n      } catch (_) {\r\n        // fall through – bad cache format\r\n      }\r\n    }\r\n\r\n    /** Fetch fresh rates from public providers (primary → open.er-api.com, fallback → exchangerate.host) */\r\n    const fetchRates = async () => {\r\n      setLoading(true);\r\n      // Build provider list: check env first (comma-separated URLs with {BASE} placeholder)\r\n      const envList = (process.env.REACT_APP_FX_PROVIDERS || '').split(',').map(s=>s.trim()).filter(Boolean);\r\n      const dynamicProviders = envList.map(url=>({\r\n        name:url,\r\n        buildUrl:(b)=> url.replace('{BASE}', b),\r\n        extract:(json)=> json?.rates || json?.conversion_rates || json?.quotes,\r\n      }));\r\n\r\n      const providers = dynamicProviders.length > 0 ? dynamicProviders : [\r\n        {\r\n          name: 'open.er-api.com',\r\n          buildUrl: (b) => `https://open.er-api.com/v6/latest/${b}`,\r\n          extract: (json) => json?.rates || json?.conversion_rates || json?.quotes,\r\n        },\r\n        {\r\n          name: 'exchangerate.host',\r\n          buildUrl: (b) => `https://api.exchangerate.host/latest?base=${b}`,\r\n          extract: (json) => json?.rates || json?.conversion_rates || json?.quotes,\r\n        },\r\n      ];\r\n\r\n      let lastErr = null;\r\n      for (const p of providers) {\r\n        try {\r\n          const res = await fetch(p.buildUrl(base));\r\n          if (!res.ok) throw new Error(`${p.name} HTTP ${res.status}`);\r\n          const json = await res.json();\r\n          let r = p.extract(json);\r\n          const providerBase = json.base || json.base_code || json.source;\r\n          if (providerBase && providerBase !== base && r && r[base]) {\r\n            const factor = r[base]; // rate of requested base vs providerBase\r\n            const norm = {};\r\n            for (const [k, v] of Object.entries(r)) {\r\n              norm[k] = v / factor; // convert so that requested base becomes 1\r\n            }\r\n            r = norm;\r\n          }\r\n          // Handle currencylayer-style 'quotes' object (keys like \"USDEUR\")\r\n          if (r && typeof r === 'object' && !Array.isArray(r)) {\r\n            const keys = Object.keys(r);\r\n            if (keys.length && keys.every(k => k.startsWith(base))) {\r\n              const stripped = {};\r\n              for (const k of keys) {\r\n                stripped[k.slice(base.length)] = r[k];\r\n              }\r\n              r = stripped;\r\n            }\r\n          }\r\n          if (!r) throw new Error(`${p.name} missing rates`);\r\n          setRates(r);\r\n          setLastUpdated(new Date());\r\n          localStorage.setItem(STORAGE_KEY, JSON.stringify({ date: today, ts: new Date().toISOString(), data: r }));\r\n          setError(null);\r\n          return; // success\r\n        } catch (err) {\r\n          console.warn(`Provider ${p.name} failed`, err);\r\n          lastErr = err;\r\n        }\r\n      }\r\n      // if we reach here, all providers failed\r\n      setError(lastErr?.message || 'All FX providers failed');\r\n    };\r\n\r\n    fetchRates();\r\n  }, [base]);\r\n\r\n  return { rates, loading, error, lastUpdated };\r\n}\r\n","import * as React from \"react\";\nfunction BookmarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M6.32 2.577a49.255 49.255 0 0 1 11.36 0c1.497.174 2.57 1.46 2.57 2.93V21a.75.75 0 0 1-1.085.67L12 18.089l-7.165 3.583A.75.75 0 0 1 3.75 21V5.507c0-1.47 1.073-2.756 2.57-2.93Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BookmarkIcon);\nexport default ForwardRef;","import { animate, stagger } from 'animejs';\r\n\r\n// Animate job cards when they first appear or when the list changes\r\nexport const animateJobCardEntrance = () => {\r\n  const cards = document.querySelectorAll('.job-card');\r\n  if (!cards.length) return;\r\n  \r\n  // Add animating class to prevent overlap\r\n  cards.forEach(card => card.classList.add('animating'));\r\n  \r\n  animate(cards, {\r\n    translateY: [12, 0], // Reduced movement to prevent overlap\r\n    opacity: [0, 1],\r\n    delay: stagger(60), // Faster cascade\r\n    duration: 400, // Shorter duration\r\n    easing: 'easeOutQuad',\r\n    complete: () => {\r\n      // Remove animating class when done\r\n      cards.forEach(card => card.classList.remove('animating'));\r\n    }\r\n  });\r\n};\r\n\r\n// Hover lift / scale effect for a single card element\r\nexport const jobCardHover = (enter, element) => {\r\n  if (!element) return;\r\n  \r\n  // Set higher z-index on hover to prevent overlap\r\n  if (enter) {\r\n    element.style.zIndex = '10';\r\n  } else {\r\n    element.style.zIndex = '';\r\n  }\r\n  \r\n  animate(element, {\r\n    scale: enter ? 1.02 : 1, // Reduced scale to prevent overlap\r\n    translateY: enter ? -4 : 0, // Slightly more lift for better visibility\r\n    duration: 300,\r\n    easing: 'easeOutExpo',\r\n  });\r\n};\r\n\r\n// Scroll reveal: animate cards when they enter viewport\r\nlet revealObserver;\r\nexport const setupJobCardScrollReveal = () => {\r\n  // disconnect old observer to avoid leaks\r\n  if (revealObserver) revealObserver.disconnect();\r\n  const cards = document.querySelectorAll('.job-card:not(.revealed)');\r\n  if (!cards.length) return;\r\n\r\n  revealObserver = new IntersectionObserver((entries, obs) => {\r\n    entries.forEach((entry, index) => {\r\n      if (entry.isIntersecting) {\r\n        const el = entry.target;\r\n        \r\n        // Add staggered delay to prevent all cards animating at once\r\n        setTimeout(() => {\r\n          animate(el, {\r\n            translateY: [30, 0], // Reduced movement\r\n            opacity: [0, 1],\r\n            duration: 500, // Shorter duration\r\n            easing: 'easeOutQuad',\r\n          });\r\n          el.classList.add('revealed');\r\n        }, index * 100); // Stagger the animations\r\n        \r\n        obs.unobserve(el);\r\n      }\r\n    });\r\n  }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' }); // Adjusted margins\r\n\r\n  cards.forEach(card => revealObserver.observe(card));\r\n};\r\n","import { animate } from 'animejs';\r\n\r\nlet initialized = false;\r\n\r\n// Initialize global button ripple on elements with .btn class\r\nexport const initButtonRipple = () => {\r\n  if (initialized) return;\r\n  initialized = true;\r\n\r\n  document.addEventListener('pointerdown', (e) => {\r\n    const btn = e.target.closest('.btn');\r\n    if(btn) window.modalTriggerRect = btn.getBoundingClientRect();\r\n    if (!btn) return;\r\n    \r\n    // Make sure button has relative positioning and hidden overflow\r\n    if (getComputedStyle(btn).position === 'static') {\r\n      btn.style.position = 'relative';\r\n    }\r\n    // no clipping when we attach to body\r\n\r\n    const rect = btn.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = e.clientX - rect.left - size / 2;\r\n    const y = e.clientY - rect.top - size / 2;\r\n\r\n    const ripple = document.createElement('span');\r\n    ripple.className = 'btn-ripple';\r\n    // inline fallback styles in case global CSS not yet applied\r\n    ripple.style.position = 'fixed';\r\n    ripple.style.borderRadius = '50%';\r\n    // determine contrasting ripple color\r\n    const bg = getComputedStyle(btn).backgroundColor;\r\n    const filled = bg && bg !== 'rgba(0, 0, 0, 0)' && bg !== 'transparent';\r\n    ripple.style.background = filled ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.3)';\r\n    \r\n    ripple.style.transform = 'scale(0)';\r\n    ripple.style.pointerEvents = 'none';\r\n    ripple.style.width = ripple.style.height = `${size}px`;\r\n    ripple.style.left = `${e.clientX - size/2}px`;\r\n    ripple.style.top = `${e.clientY - size/2}px`;\r\n    ripple.style.zIndex = 9999;\r\n    document.body.appendChild(ripple);\r\n    \r\n    animate(ripple, { scale: [0, 2], opacity: [0.4, 0] }, { duration: 1200, easing: 'easeOutQuad', complete: () => ripple.remove() });\r\n  });\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nimport { animateModalEntrance } from '../animations/modalMorph';\r\n\r\nexport default function Modal({ title, onClose, children }) {\r\n  useEffect(() => {\r\n    const backdrop = document.querySelector('.gwf-modal-backdrop');\r\n    const modalBox = backdrop?.querySelector('.gwf-modal');\r\n    //animateModalEntrance(modalBox, backdrop);\r\n    const originalOverflow = document.body.style.overflow;\r\n    document.body.style.overflow = 'hidden';\r\n    return () => { document.body.style.overflow = originalOverflow; };\r\n  }, []);\r\n\r\n  const modalMarkup = (\r\n    <div className=\"gwf-modal-backdrop\" onMouseDown={e => { if(e.target === e.currentTarget) onClose(); }}>\r\n      <div className=\"gwf-modal\" onMouseDown={e => e.stopPropagation()}>\r\n        <div className=\"gwf-modal-header d-flex justify-content-between align-items-center mb-3\">\r\n          <h5 className=\"mb-0\">{title}</h5>\r\n          <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClose}></button>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n}\r\n","import { useEffect, useState, useMemo, useRef, useCallback } from 'react';\r\nimport { BookmarkIcon as BookmarkSolid } from '@heroicons/react/24/solid';\r\nimport { animateJobCardEntrance, jobCardHover, setupJobCardScrollReveal } from '../animations/jobCard';\r\nimport { initButtonRipple } from '../animations/buttonRipple';\r\nimport useExchangeRates from '../hooks/useExchangeRates';\r\nimport { getCurrencySymbol, convertAmount } from '../utils/currency';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from '../components/Modal';\r\nimport { toast } from 'react-toastify';\r\nimport useCardStagger from '../hooks/useCardStagger';\r\nimport { pulse, confettiBurst } from '../utils/animations';\r\nimport api from '../api';\r\nimport { socket, connectSocket } from '../socket';\r\nimport { currencies } from '../data/options';\r\n\r\nfunction Dashboard() {\r\n  // Helper: add or update job without duplicates\r\n  const upsertJob = (prevArr, job) => {\r\n    const idx = prevArr.findIndex(j => j._id === job._id);\r\n    if (idx !== -1) {\r\n      const arr = [...prevArr];\r\n      arr[idx] = job;\r\n      return arr;\r\n    }\r\n    return [job, ...prevArr];\r\n  };\r\n  const [jobs, setJobs] = useState([]);\r\n  const publishBtnRef = useRef(null);\r\n  // apply stagger once jobs change length\r\n  useCardStagger('.job-card', [jobs.length]);\r\n  const [user, setUser] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [showApplicantsId, setShowApplicantsId] = useState(null);\r\n  // Holds latest AI suggestion from backend\r\n  const [aiSuggestion, setAiSuggestion] = useState(null);\r\n  const [pendingAiJob, setPendingAiJob] = useState(null);\r\n  const [applicants, setApplicants] = useState([]);\r\n  const uidStored = localStorage.getItem('uid');\r\n  const userCurrencyInit = uidStored ? localStorage.getItem(`currency_${uidStored}`) || 'LKR' : 'LKR';\r\n  const blank = { title:'', description:'', location:'', pay:'', currency:userCurrencyInit, type:'gig', schedule:'' };\r\n  const [form, setForm] = useState(blank);\r\n  const [applied, setApplied] = useState([]);\r\n  const [role, setRole] = useState(null);\r\n  const [userCurrency, setUserCurrency] = useState(userCurrencyInit);\r\n  const { rates, error } = useExchangeRates(userCurrency);\r\n  // Persisted dashboard preferences\r\n  const PREF_KEY = 'dashboardPrefs';\r\n  const savedPrefs = JSON.parse(localStorage.getItem(PREF_KEY) || '{}');\r\n  const savedBookmarks = JSON.parse(localStorage.getItem('bookmarkedJobs') || '[]');\r\n  const savedHidden = JSON.parse(localStorage.getItem('hiddenJobs') || '[]');\r\n  const [expanded, setExpanded] = useState([]); // array of job ids that show details\r\n  const [myId, setMyId] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [sortBy, setSortBy] = useState(savedPrefs.sortBy || 'latest');\r\n  const [typeFilter, setTypeFilter] = useState(savedPrefs.typeFilter || 'all');\r\n  const [remoteOnly, setRemoteOnly] = useState(savedPrefs.remoteOnly ?? false);\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(savedPrefs.pageSize || 10);\r\n  const [dense, setDense] = useState(savedPrefs.dense || false);\r\n  const [bookmarkedOnly, setBookmarkedOnly] = useState(savedPrefs.bookmarkedOnly || false);\r\n  const [hiddenOnly, setHiddenOnly] = useState(savedPrefs.hiddenOnly || false);\r\n  useEffect(() => {\r\n    localStorage.setItem(PREF_KEY, JSON.stringify({ sortBy, typeFilter, remoteOnly, pageSize, dense, bookmarkedOnly, hiddenOnly }));\r\n  }, [sortBy, typeFilter, remoteOnly, pageSize, dense, bookmarkedOnly, hiddenOnly]);\r\n\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [hiddenIds, setHiddenIds] = useState(()=> savedHidden);\r\n  const [bookmarkedIds, setBookmarkedIds] = useState(()=> savedBookmarks);\r\n  const [showApplicantsModal, setShowApplicantsModal] = useState(false);\r\n  const [messageModal, setMessageModal] = useState(null); // {receiverId,name,jobId}\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [msgSubject, setMsgSubject] = useState('');\r\n  const [msgContent, setMsgContent] = useState('');\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const filteredJobs = useMemo(() => {\r\n    let res = jobs;\r\n    // Search\r\n    const q = search.trim().toLowerCase();\r\n    if (q) {\r\n      res = res.filter(j =>\r\n        (j.title && j.title.toLowerCase().includes(q)) ||\r\n        (j.location && j.location.toLowerCase().includes(q)) ||\r\n        (j.description && j.description.toLowerCase().includes(q))\r\n      );\r\n    }\r\n    // Type filter\r\n    if (typeFilter !== 'all') {\r\n      res = res.filter(j => j.type === typeFilter);\r\n    }\r\n    // Remote filter\r\n    if (remoteOnly) {\r\n      res = res.filter(j => (j.location || '').toLowerCase().includes('remote'));\r\n    }\r\n    // Hidden\r\n    if (hiddenOnly) {\r\n       res = res.filter(j => hiddenIds.includes(j._id));\r\n     } else if (hiddenIds.length) {\r\n       res = res.filter(j => !hiddenIds.includes(j._id));\r\n     }\r\n    if (bookmarkedOnly) {\r\n      res = res.filter(j => bookmarkedIds.includes(j._id));\r\n    }\r\n    return res;\r\n  }, [jobs, search, typeFilter, remoteOnly, hiddenIds, hiddenOnly, bookmarkedOnly, bookmarkedIds]);\r\n\r\n  // Derived flags for selection toolbar\r\n  const allApplied = selectedIds.length > 0 && selectedIds.every(id => applied.includes(id));\r\n  const allHiddenSelected = selectedIds.length > 0 && selectedIds.every(id => hiddenIds.includes(id));\r\n  const allBookmarkedSelected = selectedIds.length > 0 && selectedIds.every(id => bookmarkedIds.includes(id));\r\n\r\n  const sortedJobs = useMemo(() => {\r\n    const arr = [...filteredJobs];\r\n    switch (sortBy) {\r\n      case 'payHigh':\r\n        arr.sort((a,b)=> ((b.pay || 0) - (a.pay || 0))); break;\r\n      case 'payLow':\r\n        arr.sort((a,b)=> ((a.pay || 0) - (b.pay || 0))); break;\r\n      case 'titleAZ':\r\n        arr.sort((a,b)=> (a.title || '').localeCompare(b.title || '')); break;\r\n      case 'titleZA':\r\n        arr.sort((a,b)=> (b.title || '').localeCompare(a.title || '')); break;\r\n      case 'employerAZ':\r\n        arr.sort((a,b)=> ((a.employer?.name || '').localeCompare(b.employer?.name || ''))); break;\r\n      case 'employerZA':\r\n        arr.sort((a,b)=> ((b.employer?.name || '').localeCompare(a.employer?.name || ''))); break;\r\n      case 'oldest':\r\n        arr.sort((a,b)=> new Date(a.createdAt) - new Date(b.createdAt)); break;\r\n      default: // latest\r\n        arr.sort((a,b)=> new Date(b.createdAt) - new Date(a.createdAt));\r\n    }\r\n    return arr;\r\n  }, [filteredJobs, sortBy]);\r\n\r\n  const totalPages = Math.max(1, Math.ceil(sortedJobs.length / pageSize)); // still used for optional display\r\n  const currentJobs = useMemo(() => sortedJobs.slice((page - 1) * pageSize, page * pageSize), [sortedJobs, page, pageSize]);\r\n  const totalResults = sortedJobs.length;\r\n\r\n  // init button ripple once\r\n  useEffect(() => { initButtonRipple(); }, []);\r\n\r\n  // animate cards on change\r\n  useEffect(() => {\r\n    animateJobCardEntrance();\r\n    setupJobCardScrollReveal();\r\n  }, [currentJobs]);\r\n  const startIndex = Math.min((page - 1) * pageSize + 1, totalResults);\r\n  const endIndex = Math.min(page * pageSize, totalResults);\r\n  const sentinelRef = useRef(null);\r\n\r\n  const loadMore = useCallback(() => {\r\n    // Don’t append while overlay (applicants or message modal) is open – prevents rapid re-mount blink.\r\n    if (showApplicantsModal || messageModal) return;\r\n    setPage(p => (p * pageSize < sortedJobs.length ? p + 1 : p));\r\n  }, [showApplicantsModal, messageModal, sortedJobs.length, pageSize]);\r\n\r\n  useEffect(() => {\r\n    if(showApplicantsModal || messageModal || !sentinelRef.current) return; // nothing to watch\r\n    const observer = new IntersectionObserver(entries => {\r\n      if(entries[0].isIntersecting){\r\n        loadMore();\r\n      }\r\n    }, { threshold: 1 });\r\n    observer.observe(sentinelRef.current);\r\n    return () => observer.disconnect();\r\n  }, [loadMore, showApplicantsModal, messageModal, sentinelRef.current]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [search, typeFilter, remoteOnly, sortBy, pageSize, dense, hiddenIds, hiddenOnly, bookmarkedOnly]);\r\n\r\n  \r\n\r\n  \r\n\r\n  // initial load\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        const me = await api.get('/auth/me');\r\n        setUser(me.data);\r\n        setRole(me.data.role);\r\n        setUserCurrency(me.data.currency || localStorage.getItem(`currency_${me.data.id}`) || 'LKR');\r\n    setMyId(me.data.id);\r\n        localStorage.setItem('uid', me.data.id);\r\n        const uid = me.data.id;\r\n        let jobsData = [];\r\n        if (me.data.role === 'employer') {\r\n          const res = await api.get('/jobs');\r\n          jobsData = res.data;\r\n        } else {\r\n          const res = await api.get('/jobs');\r\n          jobsData = res.data;\r\n          const appliedIds = jobsData.filter(j => j.applicants && j.applicants.some(a => (a.user?._id || a.user) === uid)).map(j=>j._id);\r\n          setApplied(appliedIds);\r\n        }\r\n        // Deduplicate jobs by _id to avoid React key warnings\r\n    const uniqueJobs = [];\r\n    const seenJobIds = new Set();\r\n    for (const j of jobsData) {\r\n      if (!j?._id) continue;\r\n      if (seenJobIds.has(j._id)) continue;\r\n      seenJobIds.add(j._id);\r\n      uniqueJobs.push(j);\r\n    }\r\n    setJobs(uniqueJobs);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    init();\r\n    // socket connection\r\n    connectSocket();\r\n    socket.off('newJob');\r\n    socket.off('newApplicant');\r\n    socket.off('jobUpdated');\r\n    socket.off('jobDeleted');\r\n    socket.on('newJob', ({ job }) => {\r\n       if(role==='worker' && job.status!=='approved') return;\r\n       if(role==='employer' && job.employer?._id!==myId && job.status!=='approved') return;\r\n       setJobs(prev => upsertJob(prev, job));\r\n      if (role !== 'employer') {\r\n        toast.info(`New job posted: ${job.title}`);\r\n        setAlerts(prev=>[...prev,{id:Date.now(),text:`New job posted: ${job.title}`,variant:'info'}]);\r\n      }\r\n    });\r\n\r\n    // update or add job when admin modifies it\r\n    socket.on('jobUpdated', ({ jobId, job }) => {\r\n      setJobs(prev => {\r\n        const idx = prev.findIndex(j => j._id === jobId);\r\n        if (['rejected','suspended'].includes(job.status)) {\r\n          return prev.filter(j => j._id !== jobId);\r\n        }\r\n        if (idx !== -1) {\r\n          const arr = [...prev]; arr[idx] = job; return arr;\r\n        }\r\n        // newly approved add\r\n        return [job, ...prev];\r\n      });\r\n    });\r\n\r\n    socket.on('jobDeleted', ({ jobId, jobTitle }) => {\r\n      setJobs(prev => prev.filter(j => j._id !== jobId));\r\n      toast.info(`Job removed${jobTitle ? ': ' + jobTitle : ''}`);\r\n    });\r\n\r\n  }, []); // runs once\r\n\r\n  // socket listeners depending on role and myId\r\n  useEffect(() => {\r\n    if(!socket || !socket.connected){ connectSocket(); }\r\n    socket.off('newJob');\r\n    socket.off('jobUpdated');\r\n    socket.off('jobDeleted');\r\n\r\n    socket.on('newJob', ({ job }) => {\r\n      if(role==='worker' && job.status!=='approved') return;\r\n      if(role==='employer' && job.employer?._id!==myId && job.status!=='approved') return;\r\n      setJobs(prev => upsertJob(prev, job));\r\n    });\r\n    socket.on('jobUpdated', ({ jobId, job }) => {\r\n      setJobs(prev => {\r\n        const idx = prev.findIndex(j => j._id === jobId);\r\n        if (['rejected','suspended'].includes(job.status)) return prev.filter(j=>j._id!==jobId);\r\n        if(idx!==-1){ const arr=[...prev]; arr[idx]=job; return arr; }\r\n        if(job.status==='approved') return [job, ...prev];\r\n        return prev;\r\n      });\r\n    });\r\n    socket.on('jobDeleted', ({ jobId, jobTitle }) => {\r\n      setJobs(prev => prev.filter(j => j._id !== jobId));\r\n      toast.info(`Job removed${jobTitle ? ': ' + jobTitle : ''}`);\r\n    });\r\n  }, [role, myId]);\r\n\r\n  useEffect(() => {\r\n      const prev = JSON.parse(localStorage.getItem('bookmarkedJobs') || '[]');\r\n    if(bookmarkedIds!==prev){\r\n      localStorage.setItem('bookmarkedJobs', JSON.stringify(bookmarkedIds));\r\n    }\r\n    // Sync with backend\r\n    const added = bookmarkedIds.filter(id=> !prev.includes(id));\r\n    const removed = prev.filter(id=> !bookmarkedIds.includes(id));\r\n    added.forEach(id=> api.put(`/users/me/bookmarks/${id}`).catch(()=>{}));\r\n    removed.forEach(id=> api.delete(`/users/me/bookmarks/${id}`).catch(()=>{}));\r\n  }, [bookmarkedIds]);\r\n  useEffect(()=>{ localStorage.setItem('hiddenJobs', JSON.stringify(hiddenIds)); }, [hiddenIds]);\r\n\r\n  const handleBulkApply = async () => {\r\n    const targets = selectedIds.filter(id=> !applied.includes(id));\r\n    if(targets.length===0){ toast.info('Already applied'); return; }\r\n    for(const id of targets){\r\n      try{\r\n        await api.post(`/jobs/${id}/apply`);\r\n        setApplied(prev=>[...prev,id]);\r\n      }catch(err){ toast.error(err.response?.data?.msg||'Apply failed'); }\r\n    }\r\n    toast.success('Applied');\r\n    setSelectedIds([]);\r\n  };\r\n\r\n  const handleBulkUnapply = async () => {\r\n    const targets = selectedIds.filter(id => applied.includes(id));\r\n    if (targets.length === 0) { toast.info(t('alreadyApplied')); return; }\r\n    for (const id of targets) {\r\n      try {\r\n        await api.post(`/jobs/${id}/unapply`);\r\n        setApplied(prev => prev.filter(aid => aid !== id));\r\n      } catch (err) {\r\n        toast.error(err.response?.data?.msg || 'Unapply failed');\r\n      }\r\n    }\r\n    toast.success('Unapplied');\r\n    setSelectedIds([]);\r\n  };\r\n\r\n  const handleBulkBookmark = () => {\r\n    setBookmarkedIds(prev=> Array.from(new Set([...prev, ...selectedIds])));\r\n    toast.success('Bookmarked');\r\n    setSelectedIds([]);\r\n  };\r\n  const handleBulkUnbookmark = () => {\r\n    setBookmarkedIds(prev => prev.filter(id => !selectedIds.includes(id)));\r\n    toast.success('Unbookmarked');\r\n    setSelectedIds([]);\r\n  };\r\n\r\n  const handleBulkHide = () => {\r\n    setHiddenIds(prev=> Array.from(new Set([...prev, ...selectedIds])));\r\n    toast.info('Hidden');\r\n    setSelectedIds([]);\r\n  };\r\n  const handleBulkUnhide = () => {\r\n    setHiddenIds(prev => prev.filter(id => !selectedIds.includes(id)));\r\n    toast.success('Unhidden');\r\n    setSelectedIds([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {alerts.map(a=> (\r\n        <div key={a.id} className={`alert alert-${a.variant} alert-dismissible fade show m-3`} role=\"alert\">\r\n          {a.text}\r\n          <button type=\"button\" className=\"btn-close\" onClick={()=>setAlerts(prev=>prev.filter(x=>x.id!==a.id))}></button>\r\n        </div>\r\n      ))}\r\n      <div className=\"container mt-4\">\r\n      <h2>{t('dashboard')}</h2>\r\n      {role === 'employer' && (\r\n        <>\r\n          <button className=\"btn btn-primary mb-3\" onClick={() => { setForm(prev=>({ ...prev, currency: userCurrency })); setShowForm(prev=>!prev); }}>\r\n            {showForm ? t('cancel') : t('postJob')}\r\n          </button>\r\n          {user && !user.emailVerified && !user.phoneVerified && (\r\n        <div className=\"alert alert-warning\">{t('verifyEmailPhoneAlert')}</div>\r\n      )}\r\n      {showForm && (\r\n            <form className=\"card card-body mb-4\" onSubmit={async e => {\r\n              e.preventDefault();\r\n              try {\r\n                const res = await api.post('/jobs', { ...form, pay: Number(form.pay) });\r\n                const { job: newJob, aiSuggestion } = res.data;\r\n                setJobs(prev => upsertJob(prev, { ...newJob, currency: newJob.currency || form.currency }));\r\n                if (aiSuggestion) {\r\n                  setPendingAiJob(newJob);\r\n                  // Delay showing AI suggestion modal so the publish button pulse is visible\r\n                  setTimeout(() => setAiSuggestion(aiSuggestion), 400);\r\n                }\r\n                toast.success('Job posted');\r\n                setShowForm(false);\r\n                setForm(blank);\r\n              } catch (err) {\r\n                toast.error(err.response?.data?.msg || 'Failed to post job');\r\n              }\r\n            }}>\r\n              <div className=\"row g-3\">\r\n                <div className=\"col-md-6\">\r\n                  <input className=\"form-control\" placeholder={t('title')} value={form.title} onChange={e => setForm({ ...form, title:e.target.value })} required />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <input className=\"form-control\" placeholder={t('location')} value={form.location} onChange={e => setForm({ ...form, location:e.target.value })} required />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <textarea className=\"form-control\" placeholder={t('description')} value={form.description} onChange={e => setForm({ ...form, description:e.target.value })} required />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <select className=\"form-select\" value={form.currency} onChange={e=>setForm({...form, currency:e.target.value})}>\r\n                    {currencies.map(c => <option key={c} value={c}>{c} ({getCurrencySymbol(c)})</option>)}\r\n\r\n\r\n\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">{getCurrencySymbol(form.currency)}</span>\r\n                    <input type=\"number\" min=\"0\" className=\"form-control\" placeholder={t('pay')} value={form.pay} onChange={e => { const v=e.target.value; setForm({ ...form, pay: v === '' ? '' : Math.max(0, Number(v)) }); }} required />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <select className=\"form-select\" value={form.type} onChange={e => setForm({ ...form, type:e.target.value })}>\r\n                    <option value=\"full-time\">{t('fullTime')}</option>\r\n                    <option value=\"part-time\">{t('partTime')}</option>\r\n                    <option value=\"freelance\">{t('freelance')}</option>\r\n                    <option value=\"gig\">{t('gig')}</option>\r\n                    <option value=\"online\">{t('online')}</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <input className=\"form-control\" placeholder={`${t('schedule')} (${t('optional') || 'optional'})`} value={form.schedule} onChange={e => setForm({ ...form, schedule:e.target.value })} />\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" ref={publishBtnRef} onClick={() => pulse(publishBtnRef.current)} className=\"btn btn-success mt-3 w-100\" disabled={!user || (!user.emailVerified && !user.phoneVerified)}>{t('publish')}</button>\r\n            </form>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* Search */}\r\n      <div className=\"d-flex flex-wrap gap-2 mb-3\" style={{maxWidth:'900px'}}>\r\n        <div className=\"input-group\" style={{minWidth:'250px'}}>\r\n          <input type=\"text\" className=\"form-control\" value={search} onChange={e=>setSearch(e.target.value)} placeholder={t('searchJobs')} />\r\n          {search ? (\r\n            <button className=\"btn btn-outline-secondary\" onClick={()=>setSearch('')}>{t('clear')}</button>\r\n          ) : (\r\n            <span className=\"input-group-text\">{t('search')}</span>\r\n          )}\r\n        </div>\r\n        <select className=\"form-select\" style={{maxWidth:'200px'}} value={sortBy} onChange={e=>setSortBy(e.target.value)}>\r\n          <option value=\"latest\">{t('latest')}</option>\r\n          <option value=\"oldest\">{t('oldest')}</option>\r\n          <option value=\"payHigh\">{t('payHigh')}</option>\r\n          <option value=\"payLow\">{t('payLow')}</option>\r\n          <option value=\"titleAZ\">{t('sortTitleAZ')}</option>\r\n          <option value=\"titleZA\">{t('sortTitleZA')}</option>\r\n          <option value=\"employerAZ\">{t('sortClientAZ')}</option>\r\n          <option value=\"employerZA\">{t('sortClientZA')}</option>\r\n        </select>\r\n        <select className=\"form-select\" style={{maxWidth:'200px'}} value={typeFilter} onChange={e=>setTypeFilter(e.target.value)}>\r\n          <option value=\"all\">{t('allTypes')}</option>\r\n          <option value=\"full-time\">{t('fullTime')}</option>\r\n          <option value=\"part-time\">{t('partTime')}</option>\r\n          <option value=\"freelance\">{t('freelance')}</option>\r\n          <option value=\"gig\">{t('gig')}</option>\r\n                    <option value=\"online\">{t('online')}</option>\r\n        </select>\r\n        <button className={`btn btn-${bookmarkedOnly ? 'warning' : 'outline-warning'} ms-2`} onClick={() => setBookmarkedOnly(prev => !prev)}>\r\n          {bookmarkedOnly ? t('allJobs') : t('bookmarked')}\r\n        </button>\r\n        <button className={`btn btn-${hiddenOnly ? 'danger' : 'outline-danger'} ms-2`} onClick={() => setHiddenOnly(prev => !prev)}>\r\n          {hiddenOnly ? t('allJobs') : t('hidden')}\r\n        </button>\r\n        <div className=\"form-check d-flex align-items-center\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"remoteOnly\" checked={remoteOnly} onChange={e=>setRemoteOnly(e.target.checked)} />\r\n          <label className=\"form-check-label ms-1\" htmlFor=\"remoteOnly\">{t('remote')}</label>\r\n        </div>\r\n        \r\n        <select className=\"form-select\" style={{maxWidth:'120px'}} value={pageSize} onChange={e=>setPageSize(Number(e.target.value))}>\r\n          <option value={5}>5 / page</option>\r\n          <option value={10}>10 / page</option>\r\n          <option value={20}>20 / page</option>\r\n          <option value={50}>50 / page</option>\r\n        </select>\r\n        <div className=\"form-check d-flex align-items-center\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"densityToggle\" checked={dense} onChange={e=>setDense(e.target.checked)} />\r\n          <label className=\"form-check-label ms-1\" htmlFor=\"densityToggle\">{t('compact')}</label>\r\n        </div>\r\n      </div>\r\n      {selectedIds.length>0 && (\r\n        <div className=\"selection-bar d-flex flex-wrap gap-2 align-items-center\">\r\n          <strong>{t('selected',{count:selectedIds.length})}</strong>\r\n          {role === 'worker' && !allApplied && (\r\n            <button className=\"toolbar-btn primary\" onClick={handleBulkApply}>{t('apply')}</button>\r\n          )}\r\n          {role === 'worker' && allApplied && (\r\n            <button className=\"toolbar-btn secondary\" onClick={handleBulkUnapply}>{t('unapply')}</button>\r\n          )}\r\n          {!allBookmarkedSelected && (\r\n            <button className=\"toolbar-btn secondary\" onClick={handleBulkBookmark}>{t('bookmark')}</button>\r\n          )}\r\n          {allBookmarkedSelected && (\r\n            <button className=\"toolbar-btn secondary\" onClick={handleBulkUnbookmark}>Unbookmark</button>\r\n          )}\r\n          {!allHiddenSelected && (\r\n            <button className=\"toolbar-btn danger\" onClick={handleBulkHide}>{t('hide')}</button>\r\n          )}\r\n          {allHiddenSelected && (\r\n            <button className=\"toolbar-btn success\" onClick={handleBulkUnhide}>{t('unhide')}</button>\r\n          )}\r\n          <button className=\"toolbar-btn link\" onClick={()=>setSelectedIds([])}>{t('clear')}</button>\r\n        </div>\r\n      )}\r\n      {sortedJobs.length === 0 ? (\r\n        <p>{t('noJobs')}</p>\r\n      ) : (\r\n        <ul className={`list-unstyled row ${dense ? 'row-cols-1 g-0' : 'row-cols-1 row-cols-md-2 row-cols-lg-3 g-4'}`}>\r\n          {currentJobs.map((job) => (\r\n            <li key={job._id} tabIndex=\"0\" className={`col job-card card h-100 ${dense ? 'compact ' : ''}job-type-${job.type} ${bookmarkedIds.includes(job._id) ? 'bookmarked' : ''}` } onMouseEnter={e=>jobCardHover(true, e.currentTarget)} onMouseLeave={e=>jobCardHover(false, e.currentTarget)}>\r\n              <div className=\"card-body w-100 d-flex flex-column align-items-center text-center\">\r\n                <h5 className=\"mb-1 d-flex align-items-center gap-2\">\r\n                      <input type=\"checkbox\" className=\"form-check-input me-2\" checked={selectedIds.includes(job._id)} onChange={e=>setSelectedIds(prev=> e.target.checked ? [...prev, job._id] : prev.filter(id=>id!==job._id))} />\r\n                  {job.title}{bookmarkedIds.includes(job._id) && (<BookmarkSolid className=\"bookmark-icon text-warning ms-1\" aria-label=\"Bookmarked\" style={{width:'1rem',height:'1rem'}} />)}\r\n                </h5>\r\n                <div className=\"mb-2\">\r\n                  {(() => {\r\n                    const needsConv = job.currency && job.currency !== userCurrency && rates;\r\n                    const converted = needsConv ? convertAmount(job.pay, job.currency, userCurrency, rates).toFixed(2) : null;\r\n                    const original = `${getCurrencySymbol(job.currency || userCurrency)} ${job.pay.toFixed ? job.pay.toFixed(2) : job.pay}`;\r\n                    const convPart = needsConv ? ` = ${getCurrencySymbol(userCurrency)} ${converted}` : '';\r\n                    const payClr = (() => { const v = converted ? Number(converted) : (job.pay || 0); if(v <= 500) return 'danger'; if(v <= 1500) return 'warning'; return 'success';})();\r\n                    return <span className={`badge bg-${payClr} fw-normal`}>{original}{convPart}</span>;\r\n                  })()}\r\n                </div>\r\n                <div className=\"text-muted small\">\r\n                  {job.location} • {job.type}\r\n                  {job.location && job.location.toLowerCase().includes('remote') && (\r\n                    <span className=\"badge bg-info text-dark ms-1\">Remote</span>\r\n                  )}\r\n                  {/* Status badge visible to job owner (client) */}\r\n                  {(() => {\r\n                    if (role === 'employer' && (job.employer && ((job.employer._id || job.employer) === myId))) {\r\n                      const status = job.status || 'pending';\r\n                      const clr = status === 'approved' ? 'success' : status === 'rejected' ? 'danger' : status === 'suspended' ? 'warning' : 'secondary';\r\n                      return <span className={`badge bg-${clr} ms-1 text-uppercase`}>{status}</span>;\r\n                    }\r\n                    return null;\r\n                  })()}\r\n                  {(() => {\r\n                    const posted = (Date.now() - new Date(job.createdAt)) / 86400000;\r\n                    return posted < 2 ? <span className=\"badge bg-danger ms-1\">Urgent</span> : null;\r\n                  })()}\r\n                  <br />\r\n                  • Posted by {job.employer && job.employer.name ? job.employer.name : 'Unknown'}\r\n                  {job.employer && ((job.employer._id || job.employer) === myId) ? ' (me)' : ''}\r\n                </div>\r\n              </div>\r\n              {expanded.includes(job._id) && (\r\n                <div className=\"card card-body bg-light mt-3 w-100\">\r\n                  <p className=\"mb-2\"><strong>Description</strong><br />{job.description}</p>\r\n                  <div className=\"d-flex flex-wrap gap-2 mb-2\">\r\n                    {(() => {\r\n                         const displayPay = job.currency ? (job.currency===userCurrency ? job.pay : convertAmount(job.pay, job.currency, userCurrency, rates)) : job.pay;\r\n                         const display = displayPay ? displayPay.toFixed(2) : job.pay;\r\n                         const originalPart = `${getCurrencySymbol(job.currency || userCurrency)} ${job.pay.toFixed ? job.pay.toFixed(2) : job.pay}`;\r\n                         const convertedPart = job.currency && job.currency !== userCurrency && rates ? ` = ${getCurrencySymbol(userCurrency)} ${display}` : '';\r\n                         const payClr = (() => { const v = display; if(v <= 500) return 'danger'; if(v <= 1500) return 'warning'; return 'success';})();\r\n                             return (\r\n                               <>\r\n                                 <span className={`badge bg-${payClr}`}>Pay: {originalPart}{convertedPart}</span>\r\n                                 {job.location && job.location.toLowerCase().includes('remote') && <span className=\"badge bg-info text-dark\">Remote</span>}\r\n                                 {(() => { const posted = (Date.now()-new Date(job.createdAt)) / 86400000; return posted<2 ? <span className=\"badge bg-danger\">Urgent</span> : null; })()}\r\n                               </>\r\n                             );\r\n                       })()}\r\n                    {job.schedule && <span className=\"badge bg-secondary\">Schedule: {job.schedule}</span>}\r\n                    <span className=\"badge bg-light text-dark border\">Posted {new Date(job.createdAt).toLocaleDateString()}</span>\r\n                  </div>\r\n                  {job.employer && (\r\n                    <p className=\"mb-0\"><strong>Contact:</strong> <a href={`mailto:${job.employer.email}`}>{job.employer.email}</a>{job.employer.phone ? ` • ${job.employer.phone}` : ''}</p>\r\n                  )}\r\n                </div>\r\n               )}\r\n\r\n               <div className=\"mt-auto d-flex flex-column align-items-center gap-2 w-100\">\r\n                  <button className=\"toolbar-btn secondary\" onClick={()=>{\r\n                    setExpanded(prev=> prev.includes(job._id) ? prev.filter(id=>id!==job._id) : [...prev, job._id]);\r\n                  }}>{expanded.includes(job._id) ? t('hide') : t('details')}</button>\r\n                </div>\r\n\r\n                {role === 'worker' && (\r\n                <button\r\n                  className={`btn btn-sm mt-2 mt-md-0 ${applied.includes(job._id) ? 'btn-outline-danger' : 'btn-outline-primary'}`}\r\n                  onClick={async () => {\r\n                    try {\r\n                      if (applied.includes(job._id)) {\r\n                        await api.post(`/jobs/${job._id}/unapply`);\r\n                        setApplied(prev => prev.filter(id => id !== job._id));\r\n                        toast.info(t('withdraw'));\r\n                      } else {\r\n                        const msg = window.prompt('Optional message to client (leave blank for none):','');\r\n                        await api.post(`/jobs/${job._id}/apply`, { message: msg });\r\n                        setApplied(prev => [...prev, job._id]);\r\n                        toast.success(t('applied'));\r\n                      }\r\n                    } catch (err) {\r\n                      toast.error(err.response?.data?.msg || 'Action failed');\r\n                    }\r\n                  }}\r\n                >\r\n                  {applied.includes(job._id) ? t('unapply') : t('apply')}\r\n                </button>\r\n              )}\r\n              {role === 'employer' && (job.employer && ((job.employer._id || job.employer) === myId)) && (\r\n                <div className=\"d-flex align-items-center gap-2 mt-2 mt-md-0\">\r\n                  <button className=\"btn btn-sm btn-outline-info\" onClick={async ()=>{\r\n                      try {\r\n                         const res = await api.get(`/jobs/${job._id}/applicants`);\r\n                         setApplicants(res.data);\r\n                         setShowApplicantsId(job._id);\r\n                         setShowApplicantsModal(true);\r\n                       } catch(err) { toast.error(err.response?.data?.msg || 'Failed to fetch'); }\r\n                  }}>Applicants</button>\r\n                  <span className=\"badge bg-primary rounded-pill\">{job.type}</span>\r\n                  <button className=\"toolbar-btn secondary\" onClick={() => { setEditingId(job._id); setForm({ title: job.title, description: job.description, location: job.location, pay: job.pay, currency: job.currency || userCurrency, type: job.type, schedule: job.schedule || '' }); }}>Edit</button>\r\n                  <button className=\"toolbar-btn danger\" onClick={async () => {\r\n                    if (!window.confirm('Delete this job?')) return;\r\n                    try {\r\n                      await api.delete(`/jobs/${job._id}`);\r\n                      setJobs(prev => prev.filter(j => j._id !== job._id));\r\n                      toast.success('Job deleted');\r\n                    } catch (err) {\r\n                      toast.error(err.response?.data?.msg || 'Delete failed');\r\n                    }\r\n                  }}>Delete</button>\r\n                </div>\r\n              )}\r\n              {editingId === job._id && (\r\n                <form className=\"card card-body mt-2 w-100\" onSubmit={async e => {\r\n                  e.preventDefault();\r\n                  try {\r\n                    const res = await api.put(`/jobs/${job._id}`, { ...form, pay: Number(form.pay), currency: form.currency });\r\n                    setJobs(prev => prev.map(j => j._id===job._id ? { ...res.data, currency: res.data.currency || form.currency } : j));\r\n                    setEditingId(null); setForm(blank);\r\n                    toast.success('Job updated');\r\n                  } catch (err) {\r\n                    toast.error(err.response?.data?.msg || 'Update failed');\r\n                  }\r\n                }}>\r\n                  <div className=\"row g-2\">\r\n                    <div className=\"col-md-4\"><input className=\"form-control\" value={form.title} onChange={e=>setForm({...form,title:e.target.value})} placeholder={t('title')} required /></div>\r\n                    <div className=\"col-md-4\"><input className=\"form-control\" value={form.location} onChange={e=>setForm({...form,location:e.target.value})} placeholder={t('location')} required /></div>\r\n                    <div className=\"col-md-4\"><select className=\"form-select\" value={form.currency} onChange={e=>setForm({...form, currency:e.target.value})}>{currencies.map(c => <option key={c} value={c}>{c} ({getCurrencySymbol(c)})</option>)}</select></div><div className=\"col-md-4\"><div className=\"input-group\"><span className=\"input-group-text\">{getCurrencySymbol(form.currency)}</span><input type=\"number\" min=\"0\" step=\"0.01\" className=\"form-control\" value={form.pay} onChange={e => { const v = e.target.value; setForm({ ...form, pay: v === '' ? '' : Math.max(0, Number(v)) }); }} placeholder={t('pay')} required /></div></div>\r\n                    <div className=\"col-md-4\"><select className=\"form-select\" value={form.currency} onChange={e=>setForm({...form, currency:e.target.value})}>{currencies.map(c => <option key={c} value={c}>{c} ({getCurrencySymbol(c)})</option>)}</select></div>\r\n                    <div className=\"col-12\"><textarea className=\"form-control\" value={form.description} onChange={e=>setForm({...form,description:e.target.value})} placeholder={t('description')} required /></div>\r\n                  </div>\r\n                  <div className=\"d-flex gap-2 mt-2\">\r\n                    <button type=\"submit\" className=\"btn btn-success btn-sm\">Save</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>{setEditingId(null);setForm(blank);}}>Cancel</button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n              {showApplicantsModal && showApplicantsId===job._id && (\r\n                <Modal title={`Applicants for ${job.title}`} onClose={() => setShowApplicantsModal(false)}>\r\n                  {applicants.length === 0 ? (\r\n                     <div className=\"alert alert-info text-center\">No applicants yet.</div>\r\n                   ) : (\r\n                     <ul className=\"list-group w-100 mt-2\">\r\n                       {applicants.map(a => (\r\n                         <li key={a._id} tabIndex=\"0\" className={`col job-card card h-100 ${dense ? 'compact ' : ''}job-type-${job.type} d-flex flex-column`}>\r\n                           <div className=\"d-flex justify-content-between align-items-center w-100\"><span>{a.user?.name || a.user?.email}</span><span className={`badge bg-${a.status==='pending'?'secondary':a.status==='accepted'?'success':a.status==='rejected'?'danger':'info'}`}>{a.status}</span></div>\r\n                           {a.message && <div className=\"mt-1\"><strong>Message:</strong> {a.message}</div>}\r\n                            {a.user?.resume && (\r\n                                <div className=\"mt-1\">\r\n                                  {(() => {\r\n                                    const base = api.defaults.baseURL?.replace(/\\/api$/, '') || '';\r\n                                    const url = a.user.resume.startsWith('http') ? a.user.resume : base + a.user.resume;\r\n                                    return (\r\n                                      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-outline-primary\">View Résumé</a>\r\n                                    );\r\n                                  })()}\r\n                                </div>\r\n                              )}\r\n                           <div className=\"d-flex gap-1 mt-2\">\r\n                              <button className=\"toolbar-btn success\" onClick={async()=>{\r\n                                try { \r\n                                  const msg = window.prompt('Optional message to applicant (leave blank for none):','');\r\n                                  await api.put(`/jobs/${job._id}/applicants/${a._id}`, { status: 'accepted', message: msg });\r\n                                  toast.success('Accepted');\r\n                                   confettiBurst(); \r\n                                  setApplicants(prev=>prev.map(p=>p._id===a._id?{...p,status:'accepted'}:p)); \r\n                                } catch(err){toast.error(err.response?.data?.msg||'Err');}\r\n                              }}>Accept</button>\r\n                              <button className=\"toolbar-btn danger\" onClick={async()=>{\r\n                                try { \r\n                                  const msg = window.prompt('Optional message to applicant (leave blank for none):','');\r\n                                  await api.put(`/jobs/${job._id}/applicants/${a._id}`, { status: 'rejected', message: msg });\r\n                                  toast.info('Rejected'); \r\n                                  setApplicants(prev=>prev.map(p=>p._id===a._id?{...p,status:'rejected'}:p)); \r\n                                } catch(err){toast.error(err.response?.data?.msg||'Err');}\r\n                              }}>Reject</button>\r\n                              <button className=\"toolbar-btn secondary\" onClick={async()=>{\r\n                                try { \r\n                                  const msg = window.prompt('Optional message to applicant (leave blank for none):','');\r\n                                  await api.put(`/jobs/${job._id}/applicants/${a._id}`, { status: 'bookmarked', message: msg });\r\n                                  toast.info('Bookmarked'); \r\n                                  setApplicants(prev=>prev.map(p=>p._id===a._id?{...p,status:'bookmarked'}:p)); \r\n                                } catch(err){toast.error(err.response?.data?.msg||'Err');}\r\n                              }}>Bookmark</button>\r\n                              <button className=\"btn btn-sm btn-outline-primary\"\r\n                                disabled={!user || (!user.emailVerified && !user.phoneVerified)}\r\n                                onClick={() => navigate(`/chat?user=${a.user?._id}&job=${job._id}`)}\r\n                              >Chat</button>\r\n                            </div>\r\n                         </li>\r\n                       ))}\r\n                     </ul>\r\n                   )}\r\n                </Modal>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {totalPages > 1 && (\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center mt-3\">\r\n          <span className=\"small text-muted mb-2 mb-md-0\">\r\n            Showing {startIndex}-{endIndex} of {totalResults}\r\n          </span>\r\n          <nav>\r\n            <ul className=\"pagination mb-0\">\r\n              <li className={`page-item ${page === 1 ? 'disabled' : ''}`}>\r\n                <button className=\"page-link\" onClick={() => setPage(p => Math.max(1, p - 1))}>&laquo;</button>\r\n              </li>\r\n              {Array.from({ length: totalPages }).map((_, idx) => (\r\n                <li key={idx} className={`page-item ${page === idx + 1 ? 'active' : ''}`}>\r\n                  <button className=\"page-link\" onClick={() => setPage(idx + 1)}>{idx + 1}</button>\r\n                </li>\r\n              ))}\r\n              <li className={`page-item ${page === totalPages ? 'disabled' : ''}`}>\r\n                <button className=\"page-link\" onClick={() => setPage(p => Math.min(totalPages, p + 1))}>&raquo;</button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n</div>\r\n      )}\r\n      {aiSuggestion && (\r\n        <Modal title=\"AI Suggestions\" onClose={() => setAiSuggestion(null)}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label fw-semibold\">Improved Description</label>\r\n            <textarea className=\"form-control\" rows=\"6\" value={aiSuggestion.improvedDescription || ''} readOnly />\r\n            <button className=\"btn btn-secondary mt-2 me-2\" onClick={() => { setAiSuggestion(null); toast.info('Kept original description'); }}>Keep Original</button>\r\n            <button className=\"btn btn-outline-primary mt-2\" onClick={async () => {\r\n              try {\r\n                if (pendingAiJob) {\r\n                  await api.put(`/jobs/${pendingAiJob._id}`, { description: aiSuggestion.improvedDescription });\r\n                  setJobs(prev => prev.map(j => j._id === pendingAiJob._id ? { ...j, description: aiSuggestion.improvedDescription } : j));\r\n                }\r\n                setAiSuggestion(null);\r\n                toast.success('Job updated with AI description');\r\n              } catch (err) {\r\n                toast.error(err.response?.data?.msg || 'Update failed');\r\n              }\r\n            }}>Use This Description</button>\r\n          </div>\r\n          {aiSuggestion.missingFields && aiSuggestion.missingFields.length > 0 && (\r\n            <div className=\"mt-3\">\r\n              <h6>Possible Missing Fields</h6>\r\n              <ul>\r\n                {aiSuggestion.missingFields.map(f => <li key={f}>{f}</li>)}\r\n              </ul>\r\n              <button className=\"btn btn-primary mt-2\" onClick={() => {\r\n                if (pendingAiJob) {\r\n                  setEditingId(pendingAiJob._id);\r\n                  setForm({ title: pendingAiJob.title, description: pendingAiJob.description, location: pendingAiJob.location, pay: pendingAiJob.pay, currency: pendingAiJob.currency || userCurrency, type: pendingAiJob.type, schedule: pendingAiJob.schedule || '' });\r\n                }\r\n                setAiSuggestion(null);\r\n              }}>Edit Job to Add Details</button>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n\r\n      {messageModal && (\r\n        <Modal title={`Message to ${messageModal.name}`} onClose={() => setMessageModal(null)}>\r\n          <form\r\n            onSubmit={async e => {\r\n              e.preventDefault();\r\n              try {\r\n                await api.post('/chat', {\r\n                  receiverId: messageModal.receiverId,\r\n                  subject: msgSubject,\r\n                  content: msgContent,\r\n                  jobId: messageModal.jobId,\r\n                });\r\n                toast.success('Message sent');\r\n                setMessageModal(null);\r\n              } catch (err) {\r\n                toast.error(err.response?.data?.msg || 'Send failed');\r\n              }\r\n            }}\r\n          >\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Subject</label>\r\n              <input\r\n                className=\"form-control\"\r\n                value={msgSubject}\r\n                onMouseEnter={e => jobCardHover(true, e.currentTarget)}\r\n                onMouseLeave={e => jobCardHover(false, e.currentTarget)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Message</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows=\"4\"\r\n                value={msgContent}\r\n                onChange={e => setMsgContent(e.target.value)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"d-flex gap-2\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Send</button>\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setMessageModal(null)}>Cancel</button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n    </>\r\n   );\r\n}\r\n\r\nexport default Dashboard;\r\n","/* eslint-disable */\r\nimport { useEffect } from 'react';\r\nimport { animate } from 'animejs';\r\n\r\n/**\r\n * Hook: fade & slide job cards in as they appear.\r\n * @param {string} selector - CSS selector targeting the elements to animate.\r\n * @param {Array<any>} deps - React dependency array; pass something like `[items.length]` so new items retrigger.\r\n */\r\nexport default function useCardStagger(selector = '.job-card', deps = []) {\r\n  useEffect(() => {\r\n    // Ensure elements exist before animating\r\n    const nodes = document.querySelectorAll(selector);\r\n    if (!nodes.length) return;\r\n\r\n    animate(nodes, {\r\n      opacity: [{ from: 0, to: 1 }],\r\n      translateY: [{ from: 30, to: 0 }],\r\n      delay: (_, i) => i * 70,\r\n      duration: 500,\r\n      ease: 'outCubic'\r\n    });\r\n  }, deps);\r\n\r\n}\r\n","import { animate } from 'animejs';\r\n\r\n/**\r\n * Pulse a DOM element to provide success feedback.\r\n * @param {HTMLElement} el\r\n */\r\nexport function pulse(el) {\r\n  if (!el) return;\r\n  animate(el, {\r\n    scale: [{ from: 1 }, { to: 1.15 }, { to: 1 }],\r\n    duration: 450,\r\n    easing: 'easeOutBack'\r\n  });\r\n}\r\n\r\n/**\r\n * Bounce element vertically + scale for decorative effect.\r\n * @param {HTMLElement} el\r\n */\r\nexport function bounce(el) {\r\n  if (!el) return;\r\n  animate(el, {\r\n    translateY: [0, -12, 0],\r\n    scale: [1, 1.15, 1],\r\n    duration: 800,\r\n    easing: 'easeOutElastic(1, .5)'\r\n  });\r\n}\r\n\r\n/**\r\n * Confetti burst – called e.g. on applicant acceptance.\r\n * Uses dynamic import to keep bundle small.\r\n * @param {object} opts canvas-confetti options override\r\n */\r\nexport async function confettiBurst(opts = {}) {\r\n  const confetti = (await import('canvas-confetti')).default;\r\n  confetti({\r\n    particleCount: 120,\r\n    spread: 90,\r\n    origin: { y: 0.3 },\r\n    ...opts,\r\n  });\r\n}\r\n","// Auto-generated list of countries & currencies\r\nexport const countries = [\r\n  \"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Antigua and Barbuda\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Côte d'Ivoire\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czech Republic\",\"Democratic Republic of the Congo\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Fiji\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Grenada\",\"Guatemala\",\"Guinea\",\"Guinea-Bissau\",\"Guyana\",\"Haiti\",\"Holy See\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Qatar\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Kitts and Nevis\",\"Saint Lucia\",\"Saint Vincent and the Grenadines\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"Sudan\",\"Suriname\",\"Sweden\",\"Switzerland\",\"Syria\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor-Leste\",\"Togo\",\"Tonga\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Venezuela\",\"Vietnam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"\r\n];\r\n\r\nexport const currencies = [\r\n  \"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHF\",\"CLP\",\"CNY\",\"COP\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"FOK\",\"GBP\",\"GEL\",\"GGP\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"IMP\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JEP\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KID\",\"KMF\",\"KRW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRU\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STN\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TVD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"UYU\",\"UZS\",\"VES\",\"VND\",\"VUV\",\"WST\",\"XAF\",\"XCD\",\"XOF\",\"XPF\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"\r\n];\r\n"],"names":["currencySymbols","AUD","CAD","LKR","USD","INR","EUR","GBP","getCurrencySymbol","code","convertAmount","amount","from","to","rates","base","arguments","length","undefined","rate","rateToBase","rateTargetToBase","useExchangeRates","setRates","useState","lastUpdated","setLastUpdated","loading","setLoading","error","setError","useEffect","STORAGE_KEY","today","Date","toISOString","slice","cachedRaw","localStorage","getItem","cached","JSON","parse","date","data","ts","_","async","_lastErr","dynamicProviders","process","split","map","s","trim","filter","Boolean","url","name","buildUrl","b","replace","extract","json","conversion_rates","quotes","providers","lastErr","p","res","fetch","ok","Error","status","r","providerBase","base_code","source","factor","norm","k","v","Object","entries","Array","isArray","keys","every","startsWith","stripped","setItem","stringify","err","console","warn","message","fetchRates","BookmarkIcon","_ref","svgRef","title","titleId","props","React","assign","xmlns","viewBox","fill","ref","id","fillRule","d","clipRule","jobCardHover","enter","element","style","zIndex","animate","scale","translateY","duration","easing","revealObserver","initialized","Modal","onClose","children","backdrop","document","querySelector","originalOverflow","body","overflow","modalMarkup","_jsx","className","onMouseDown","e","target","currentTarget","_jsxs","stopPropagation","type","onClick","ReactDOM","_savedPrefs$remoteOnl","upsertJob","prevArr","job","idx","findIndex","j","_id","arr","jobs","setJobs","publishBtnRef","useRef","selector","deps","nodes","querySelectorAll","opacity","delay","i","ease","useCardStagger","user","setUser","showForm","setShowForm","editingId","setEditingId","showApplicantsId","setShowApplicantsId","aiSuggestion","setAiSuggestion","pendingAiJob","setPendingAiJob","applicants","setApplicants","uidStored","userCurrencyInit","blank","description","location","pay","currency","schedule","form","setForm","applied","setApplied","role","setRole","userCurrency","setUserCurrency","PREF_KEY","savedPrefs","savedBookmarks","savedHidden","expanded","setExpanded","myId","setMyId","search","setSearch","sortBy","setSortBy","typeFilter","setTypeFilter","remoteOnly","setRemoteOnly","page","setPage","pageSize","setPageSize","dense","setDense","bookmarkedOnly","setBookmarkedOnly","hiddenOnly","setHiddenOnly","selectedIds","setSelectedIds","hiddenIds","setHiddenIds","bookmarkedIds","setBookmarkedIds","showApplicantsModal","setShowApplicantsModal","messageModal","setMessageModal","alerts","setAlerts","msgSubject","setMsgSubject","msgContent","setMsgContent","navigate","useNavigate","t","useTranslation","filteredJobs","useMemo","q","toLowerCase","includes","allApplied","allHiddenSelected","allBookmarkedSelected","sortedJobs","sort","a","localeCompare","_a$employer","_b$employer","employer","_b$employer2","_a$employer2","createdAt","totalPages","Math","max","ceil","currentJobs","totalResults","addEventListener","btn","closest","window","modalTriggerRect","getBoundingClientRect","getComputedStyle","position","rect","size","width","height","ripple","clientX","left","clientY","top","createElement","borderRadius","bg","backgroundColor","filled","background","transform","pointerEvents","appendChild","complete","remove","animateJobCardEntrance","cards","forEach","card","classList","add","stagger","setupJobCardScrollReveal","disconnect","IntersectionObserver","obs","entry","index","isIntersecting","el","setTimeout","unobserve","threshold","rootMargin","observe","startIndex","min","endIndex","sentinelRef","loadMore","useCallback","current","observer","me","api","get","uid","jobsData","appliedIds","some","_a$user","uniqueJobs","seenJobIds","Set","has","push","init","connectSocket","socket","off","on","_job$employer","prev","toast","info","now","text","variant","_ref2","jobId","_ref3","jobTitle","connected","_ref4","_job$employer2","_ref5","_ref6","added","removed","put","catch","delete","_Fragment","x","emailVerified","phoneVerified","onSubmit","preventDefault","post","Number","newJob","success","_err$response3","_err$response3$data","response","msg","placeholder","value","onChange","required","currencies","c","pulse","disabled","maxWidth","minWidth","checked","htmlFor","count","targets","_err$response","_err$response$data","aid","_err$response2","_err$response2$data","handleBulkBookmark","handleBulkUnbookmark","handleBulkHide","handleBulkUnhide","tabIndex","onMouseEnter","onMouseLeave","BookmarkSolid","needsConv","converted","toFixed","original","convPart","payClr","clr","displayPay","display","originalPart","convertedPart","toLocaleDateString","href","email","phone","prompt","_err$response4","_err$response4$data","_err$response5","_err$response5$data","confirm","_err$response6","_err$response6$data","_err$response7","_err$response7$data","step","_a$user2","_a$user3","_a$user4","resume","_api$defaults$baseURL","defaults","baseURL","rel","confettiBurst","_err$response8","_err$response8$data","_err$response9","_err$response9$data","_err$response0","_err$response0$data","_a$user5","rows","improvedDescription","readOnly","_err$response1","_err$response1$data","missingFields","f","receiverId","subject","content","_err$response10","_err$response10$data","opts","confetti","default","particleCount","spread","origin","y","countries"],"sourceRoot":""}