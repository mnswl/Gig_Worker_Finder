{"version":3,"file":"static/js/632.c4dd6b09.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/BellIcon.js","../node_modules/@heroicons/react/24/outline/esm/ShieldCheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/GlobeAltIcon.js","../node_modules/@heroicons/react/24/outline/esm/KeyIcon.js","../node_modules/@heroicons/react/24/outline/esm/EnvelopeIcon.js","../node_modules/@heroicons/react/24/outline/esm/DevicePhoneMobileIcon.js","../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js","../node_modules/@heroicons/react/24/outline/esm/SunIcon.js","../node_modules/@heroicons/react/24/outline/esm/MoonIcon.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","pages/Settings.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction BellIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BellIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ShieldCheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75m-3-7.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShieldCheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction GlobeAltIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(GlobeAltIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction KeyIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(KeyIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EnvelopeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EnvelopeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction DevicePhoneMobileIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 1.5H8.25A2.25 2.25 0 0 0 6 3.75v16.5a2.25 2.25 0 0 0 2.25 2.25h7.5A2.25 2.25 0 0 0 18 20.25V3.75a2.25 2.25 0 0 0-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DevicePhoneMobileIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction SunIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(SunIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction MoonIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MoonIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../api';\r\nimport { \r\n  UserIcon, \r\n  BellIcon, \r\n  GlobeAltIcon, \r\n  ShieldCheckIcon,\r\n  EyeIcon,\r\n  CreditCardIcon,\r\n  DevicePhoneMobileIcon,\r\n  EnvelopeIcon,\r\n  KeyIcon,\r\n  TrashIcon,\r\n  CheckIcon,\r\n  SunIcon,\r\n  MoonIcon\r\n} from '@heroicons/react/24/outline';\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const { darkMode: isDark, toggleTheme } = useTheme();\r\n  const navigate = useNavigate();\r\n  \r\n  // Settings state\r\n  const [settings, setSettings] = useState({\r\n    // Profile settings\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    bio: '',\r\n    \r\n    // Notification settings\r\n    emailNotifications: true,\r\n    pushNotifications: true,\r\n    smsNotifications: false,\r\n    jobAlerts: true,\r\n    messageAlerts: true,\r\n    \r\n    // Privacy settings\r\n    profileVisibility: 'public',\r\n    showEmail: false,\r\n    showPhone: false,\r\n    allowMessages: true,\r\n    \r\n    // App preferences\r\n    language: i18n.language,\r\n    currency: 'USD',\r\n    timezone: 'America/New_York',\r\n    autoSave: true,\r\n    compactView: false\r\n  });\r\n\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [hasChanges, setHasChanges] = useState(false);\r\n  const [showVerificationModal, setShowVerificationModal] = useState(false);\r\n  const [verificationData, setVerificationData] = useState({ type: '', value: '', code: '' });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [fieldTouched, setFieldTouched] = useState({});\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [verifying, setVerifying] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [undoTimeout, setUndoTimeout] = useState(null);\r\n  const [pendingDeletion, setPendingDeletion] = useState(false);\r\n\r\n  // Validation helper functions\r\n  const validateField = (key, value) => {\r\n    const errors = {};\r\n    \r\n    switch (key) {\r\n      case 'firstName':\r\n        if (!value.trim()) {\r\n          errors.firstName = 'First name is required';\r\n        } else if (!/^[A-Za-zÀ-ÖØ-öø-ÿ'\\-\\s]{2,40}$/.test(value.trim())) {\r\n          errors.firstName = 'Use letters only (2-40 chars)';\r\n        }\r\n        break;\r\n        \r\n      case 'lastName':\r\n        if (value && !/^[A-Za-zÀ-ÖØ-öø-ÿ'\\-\\s]{2,40}$/.test(value.trim())) {\r\n          errors.lastName = 'Use letters only (2-40 chars)';\r\n        }\r\n        break;\r\n        \r\n      case 'email':\r\n        if (!value.trim()) {\r\n          errors.email = 'Email is required';\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\r\n          errors.email = 'Please enter a valid email address';\r\n        }\r\n        break;\r\n        \r\n      case 'phone':\r\n        if (value && !/^[\\+]?[1-9][\\d]{0,15}$/.test(value.replace(/[\\s\\-\\(\\)]/g, ''))) {\r\n          errors.phone = 'Please enter a valid phone number';\r\n        }\r\n        break;\r\n        \r\n      case 'bio':\r\n        if (value && value.length > 500) {\r\n          errors.bio = 'Bio must be less than 500 characters';\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return errors;\r\n  };\r\n\r\n  const getFieldError = (key) => {\r\n    return fieldTouched[key] ? validationErrors[key] : null;\r\n  };\r\n\r\n  const isFieldValid = (key) => {\r\n    return fieldTouched[key] && !validationErrors[key];\r\n  };\r\n\r\n  // Indicates if any validation errors are present across the form\r\n  const hasValidationErrors = Object.values(validationErrors).some(Boolean);\r\n\r\n  // Load user data on component mount\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await api.get('/auth/me');\r\n        const data = response.data;\r\n        \r\n        setUser(data);\r\n        \r\n        // Use firstName/lastName directly from backend instead of parsing name field\r\n        // This prevents issues with inconsistent name field truncation\r\n        const firstName = data.firstName || '';\r\n        const lastName = data.lastName || '';\r\n        \r\n\r\n        \r\n        // Load saved settings from localStorage\r\n        const savedSettings = localStorage.getItem('userSettings');\r\n        const localSettings = savedSettings ? JSON.parse(savedSettings) : {};\r\n\r\n        \r\n\r\n        setSettings(prev => ({\r\n          ...prev,\r\n          firstName,\r\n          lastName,\r\n          email: data.email || '',\r\n          phone: data.phone || '',\r\n          bio: data.bio || '',\r\n          currency: data.currency || 'USD',\r\n          language: data.language || i18n.language,\r\n          // Load notification preferences from localStorage or defaults\r\n          emailNotifications: localSettings.emailNotifications !== undefined ? localSettings.emailNotifications : true,\r\n          pushNotifications: localSettings.pushNotifications !== undefined ? localSettings.pushNotifications : true,\r\n          smsNotifications: localSettings.smsNotifications !== undefined ? localSettings.smsNotifications : false,\r\n          jobAlerts: localSettings.jobAlerts !== undefined ? localSettings.jobAlerts : true,\r\n          messageAlerts: localSettings.messageAlerts !== undefined ? localSettings.messageAlerts : true,\r\n          // Privacy settings from localStorage\r\n          profileVisibility: localSettings.profileVisibility || 'public',\r\n          showEmail: localSettings.showEmail !== undefined ? localSettings.showEmail : false,\r\n          showPhone: localSettings.showPhone !== undefined ? localSettings.showPhone : false,\r\n          allowMessages: localSettings.allowMessages !== undefined ? localSettings.allowMessages : true,\r\n          // App preferences from localStorage\r\n          autoSave: localSettings.autoSave !== undefined ? localSettings.autoSave : true,\r\n          compactView: localSettings.compactView !== undefined ? localSettings.compactView : false,\r\n        }));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n        toast.error('Failed to load user settings');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchUserData();\r\n  }, [i18n.language]);\r\n\r\n  const handleSettingChange = (key, value) => {\r\n    // Mark field as touched for validation\r\n    setFieldTouched(prev => ({ ...prev, [key]: true }));\r\n    \r\n    // Validate the field\r\n    const fieldErrors = validateField(key, value);\r\n    setValidationErrors(prev => ({\r\n      ...prev,\r\n      ...fieldErrors,\r\n      // Clear error if field is now valid\r\n      ...(Object.keys(fieldErrors).length === 0 && { [key]: undefined })\r\n    }));\r\n    \r\n    setSettings(prev => {\r\n      const newSettings = {\r\n        ...prev,\r\n        [key]: value\r\n      };\r\n\r\n      // If compact view preference changes, update dashboardPrefs as well\r\n      if(key === 'compactView'){\r\n        const prefsKey = 'dashboardPrefs';\r\n        const existing = JSON.parse(localStorage.getItem(prefsKey) || '{}');\r\n        localStorage.setItem(prefsKey, JSON.stringify({ ...existing, dense: value }));\r\n      }\r\n\r\n      return newSettings;\r\n    });\r\n    setHasChanges(true);\r\n    \r\n    // Auto-save if enabled (using functional update to get current value)\r\n    if (key !== 'autoSave') {\r\n      setSettings(currentSettings => {\r\n        if (currentSettings.autoSave) {\r\n          setTimeout(() => handleSaveSettings(), 500); // Debounce auto-save\r\n        }\r\n        return currentSettings;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = (lang) => {\r\n    handleSettingChange('language', lang);\r\n  };\r\n  \r\n  const handleResetToDefaults = () => {\r\n    if (window.confirm('Are you sure you want to reset all settings to defaults? This cannot be undone.')) {\r\n      setSettings({\r\n        ...settings,\r\n        emailNotifications: true,\r\n        pushNotifications: true,\r\n        smsNotifications: false,\r\n        jobAlerts: true,\r\n        messageAlerts: true,\r\n        profileVisibility: 'public',\r\n        showEmail: false,\r\n        showPhone: false,\r\n        allowMessages: true,\r\n        autoSave: true,\r\n        compactView: false\r\n      });\r\n      setHasChanges(true);\r\n      toast.info('Settings reset to defaults. Click Save to apply changes.');\r\n    }\r\n  };\r\n  \r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      setPendingDeletion(true);\r\n      \r\n      // Show undo toast for 10 seconds\r\n      const toastId = toast.warning(\r\n        <div>\r\n          <strong>Account deletion scheduled</strong>\r\n          <br />\r\n          <small>Your account will be deleted in 10 seconds</small>\r\n          <br />\r\n          <button \r\n            className=\"btn btn-sm btn-outline-light mt-2\"\r\n            onClick={() => handleUndoDelete(toastId)}\r\n          >\r\n            Undo Delete\r\n          </button>\r\n        </div>,\r\n        {\r\n          position: \"top-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: false,\r\n          pauseOnHover: true,\r\n          draggable: false,\r\n          onClose: () => {\r\n            if (pendingDeletion) {\r\n              executeAccountDeletion();\r\n            }\r\n          }\r\n        }\r\n      );\r\n\r\n      // Set timeout for actual deletion\r\n      const timeout = setTimeout(() => {\r\n        if (pendingDeletion) {\r\n          executeAccountDeletion();\r\n        }\r\n      }, 10000);\r\n      \r\n      setUndoTimeout(timeout);\r\n      setShowDeleteModal(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error scheduling account deletion:', error);\r\n      toast.error('Failed to schedule account deletion');\r\n      setPendingDeletion(false);\r\n    }\r\n  };\r\n\r\n  const handleUndoDelete = (toastId) => {\r\n    if (undoTimeout) {\r\n      clearTimeout(undoTimeout);\r\n      setUndoTimeout(null);\r\n    }\r\n    setPendingDeletion(false);\r\n    toast.dismiss(toastId);\r\n    toast.success('Account deletion cancelled', {\r\n      position: \"top-center\",\r\n      autoClose: 3000\r\n    });\r\n  };\r\n\r\n  const executeAccountDeletion = async () => {\r\n    try {\r\n      await api.delete('/auth/me');\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n      toast.success('Account deleted successfully');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error deleting account:', error);\r\n      toast.error('Failed to delete account. Please try again.');\r\n    } finally {\r\n      setPendingDeletion(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveSettings = async () => {\r\n    setSaving(true);\r\n\r\n    // Prevent save if there are validation errors\r\n    if (Object.values(validationErrors).some(Boolean)) {\r\n      toast.error('Please fix the highlighted errors before saving.');\r\n      setSaving(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Validate required fields\r\n      if (!settings.firstName.trim()) {\r\n        toast.error('First name is required');\r\n        setSaving(false);\r\n        return;\r\n      }\r\n      \r\n      if (!settings.email.trim()) {\r\n        toast.error('Email is required');\r\n        setSaving(false);\r\n        return;\r\n      }\r\n      \r\n      // Check if email or phone changed (these might trigger verification)\r\n      const emailChanged = user && settings.email !== user.email;\r\n      const phoneChanged = user && settings.phone !== user.phone;\r\n      \r\n      // MINIMAL SAVE - Only save fields that definitely work (same as Profile page)\r\n      const updateData = {\r\n        name: `${settings.firstName} ${settings.lastName}`.trim(),\r\n        firstName: settings.firstName,\r\n        lastName: settings.lastName,\r\n        bio: settings.bio || '',\r\n        currency: settings.currency,\r\n        language: settings.language\r\n      };\r\n      \r\n\r\n      \r\n      const response = await api.patch('/auth/me', updateData);\r\n\r\n      \r\n      // Update local state with response\r\n      setUser(prev => ({ ...prev, ...response.data }));\r\n      \r\n      // Store notification/privacy settings in localStorage for now\r\n      const localSettings = {\r\n        emailNotifications: settings.emailNotifications,\r\n        pushNotifications: settings.pushNotifications,\r\n        smsNotifications: settings.smsNotifications,\r\n        jobAlerts: settings.jobAlerts,\r\n        messageAlerts: settings.messageAlerts,\r\n        profileVisibility: settings.profileVisibility,\r\n        showEmail: settings.showEmail,\r\n        showPhone: settings.showPhone,\r\n        allowMessages: settings.allowMessages,\r\n        autoSave: settings.autoSave,\r\n        compactView: settings.compactView\r\n      };\r\n      \r\n      localStorage.setItem('userSettings', JSON.stringify(localSettings));\r\n\r\n      \r\n\r\n      \r\n      // Handle email change separately if needed\r\n      if (emailChanged) {\r\n        try {\r\n          await api.patch('/auth/me', { email: settings.email });\r\n          // Auto-send email verification code\r\n          await api.post('/auth/email-code', { email: settings.email });\r\n          // Show verification modal\r\n          setVerificationType('email');\r\n          setVerificationTarget(settings.email);\r\n          setShowVerificationModal(true);\r\n          toast.info('Email updated. Please verify your new email address.');\r\n        } catch (emailError) {\r\n          console.error('Email update error:', emailError);\r\n          if (emailError.response?.status === 400) {\r\n            toast.warning('Email updated but verification required. Check your email for verification code.');\r\n          } else {\r\n            toast.error('Failed to update email. Please try again.');\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Handle phone change separately if needed\r\n      if (phoneChanged) {\r\n        try {\r\n          await api.patch('/auth/me', { phone: settings.phone });\r\n          // Auto-send phone verification code\r\n          await api.post('/auth/phone-code', { phone: settings.phone });\r\n          // Show verification modal\r\n          setVerificationType('phone');\r\n          setVerificationTarget(settings.phone);\r\n          setShowVerificationModal(true);\r\n          toast.info('Phone updated. Please verify your new phone number.');\r\n        } catch (phoneError) {\r\n          console.error('Phone update error:', phoneError);\r\n          if (phoneError.response?.status === 400) {\r\n            toast.warning('Phone updated but verification required. Check your phone for verification code.');\r\n          } else {\r\n            toast.error('Failed to update phone. Please try again.');\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update language if changed\r\n      if (settings.language !== i18n.language) {\r\n        i18n.changeLanguage(settings.language);\r\n      }\r\n      \r\n      // Reset hasChanges flag after successful save\r\n      setHasChanges(false);\r\n      \r\n      // Show success message\r\n      if (!emailChanged && !phoneChanged) {\r\n        toast.success('Settings saved successfully!');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n      \r\n      // More detailed error handling\r\n      if (error.response?.status === 400) {\r\n        const errorMessage = error.response?.data?.message || 'Invalid input data';\r\n        toast.error(`Validation error: ${errorMessage}`);\r\n      } else if (error.response?.status === 401) {\r\n        toast.error('Authentication failed. Please log in again.');\r\n        // Redirect to login if needed\r\n        navigate('/login');\r\n      } else if (error.response?.status === 500) {\r\n        toast.error('Server error. Please try again later.');\r\n      } else if (error.code === 'NETWORK_ERROR') {\r\n        toast.error('Network error. Please check your connection.');\r\n      } else {\r\n        toast.error('Failed to save settings. Please try again.');\r\n      }\r\n      \r\n      console.error('Full error details:', {\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n  \r\n  // Handle verification code submission\r\n  const handleVerifyCode = async () => {\r\n    if (!verificationCode.trim()) {\r\n      toast.error('Please enter the verification code');\r\n      return;\r\n    }\r\n    \r\n    setVerifying(true);\r\n    try {\r\n      if (verificationType === 'email') {\r\n        await api.post('/auth/verify-email', { \r\n          email: verificationTarget, \r\n          code: verificationCode \r\n        });\r\n        toast.success('Email verified successfully!');\r\n      } else if (verificationType === 'phone') {\r\n        await api.post('/auth/verify-phone', { \r\n          phone: verificationTarget, \r\n          code: verificationCode \r\n        });\r\n        toast.success('Phone verified successfully!');\r\n      }\r\n      \r\n      // Close modal and refresh user data\r\n      setShowVerificationModal(false);\r\n      setVerificationCode('');\r\n      \r\n      // Refresh user data to get updated verification status\r\n      const { data } = await api.get('/auth/me');\r\n      setUser(data);\r\n      \r\n    } catch (error) {\r\n      console.error('Verification error:', error);\r\n      if (error.response?.status === 400) {\r\n        toast.error('Invalid verification code. Please try again.');\r\n      } else {\r\n        toast.error('Verification failed. Please try again.');\r\n      }\r\n    } finally {\r\n      setVerifying(false);\r\n    }\r\n  };\r\n  \r\n  // Resend verification code\r\n  const handleResendCode = async () => {\r\n    try {\r\n      if (verificationType === 'email') {\r\n        await api.post('/auth/email-code', { email: verificationTarget });\r\n        toast.success('New verification code sent to your email');\r\n      } else if (verificationType === 'phone') {\r\n        await api.post('/auth/phone-code', { phone: verificationTarget });\r\n        toast.success('New verification code sent to your phone');\r\n      }\r\n    } catch (error) {\r\n      console.error('Resend error:', error);\r\n      toast.error('Failed to resend code. Please try again.');\r\n    }\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'profile', label: t('settingsTabProfile'), icon: UserIcon },\r\n    { id: 'notifications', label: t('settingsTabNotifications'), icon: BellIcon },\r\n    { id: 'privacy', label: t('settingsTabPrivacy'), icon: ShieldCheckIcon },\r\n    { id: 'preferences', label: t('settingsTabPreferences'), icon: GlobeAltIcon },\r\n    { id: 'account', label: t('settingsTabAccount'), icon: KeyIcon }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <div className=\"container-fluid py-4\">\r\n        <div className=\"row\">\r\n          {/* Settings Navigation */}\r\n          <div className=\"col-lg-3 col-md-4 mb-4\">\r\n            <div className=\"settings-nav card\">\r\n              <div className=\"card-body p-0\">\r\n                <h5 className=\"card-title p-3 mb-0 border-bottom\">{t('settingsNavTitle')}</h5>\r\n                <nav className=\"nav flex-column\">\r\n                  {tabs.map(tab => {\r\n                    const IconComponent = tab.icon;\r\n                    return (\r\n                      <button\r\n                        key={tab.id}\r\n                        className={`nav-link d-flex align-items-center gap-2 ${activeTab === tab.id ? 'active' : ''}`}\r\n                        onClick={() => setActiveTab(tab.id)}\r\n                      >\r\n                        <IconComponent className=\"settings-icon\" />\r\n                        {tab.label}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Settings Content */}\r\n          <div className=\"col-lg-9 col-md-8\">\r\n            <div className=\"settings-content card\">\r\n              <div className=\"card-body\">\r\n                \r\n                {/* Profile Tab */}\r\n                {activeTab === 'profile' && (\r\n                  <div className=\"settings-section\">\r\n                    <h4 className=\"section-title d-flex align-items-center gap-2 mb-4\">\r\n                      <UserIcon className=\"section-icon\" />\r\n                      {t('settingsProfileHeading')}\r\n                    </h4>\r\n\r\n                    <div className=\"row g-3\">\r\n                      {/* First Name */}\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\" htmlFor=\"firstName\">\r\n                          {t('settingsFirstNameLabel')} <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <input\r\n                          id=\"firstName\"\r\n                          type=\"text\"\r\n                          className={`form-control ${getFieldError('firstName') ? 'is-invalid' : ''} ${isFieldValid('firstName') ? 'is-valid' : ''}`}\r\n                          value={settings.firstName}\r\n                          onChange={(e) => handleSettingChange('firstName', e.target.value)}\r\n                          aria-describedby={getFieldError('firstName') ? 'firstName-error' : 'firstName-help'}\r\n                          aria-invalid={!!getFieldError('firstName')}\r\n                          required\r\n                        />\r\n                        {getFieldError('firstName') ? (\r\n                          <div id=\"firstName-error\" className=\"invalid-feedback\" role=\"alert\">\r\n                            {getFieldError('firstName')}\r\n                          </div>\r\n                        ) : (\r\n                          <div id=\"firstName-help\" className=\"form-text\">\r\n                            {t('settingsFirstNameHelp')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Last Name */}\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\" htmlFor=\"lastName\">{t('settingsLastNameLabel')}</label>\r\n                        <input\r\n                          id=\"lastName\"\r\n                          type=\"text\"\r\n                          className={`form-control ${getFieldError('lastName') ? 'is-invalid' : ''} ${isFieldValid('lastName') ? 'is-valid' : ''}`}\r\n                          value={settings.lastName}\r\n                          onChange={(e) => handleSettingChange('lastName', e.target.value)}\r\n                          aria-describedby=\"lastName-help\"\r\n                        />\r\n                        <div id=\"lastName-help\" className=\"form-text\">\r\n                          {t('settingsLastNameHelp')}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Email */}\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\" htmlFor=\"email\">\r\n                          {t('settingsEmailLabel')} <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-text\">\r\n                            <EnvelopeIcon className=\"input-icon\" />\r\n                          </span>\r\n                          <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            className={`form-control ${getFieldError('email') ? 'is-invalid' : ''} ${isFieldValid('email') ? 'is-valid' : ''}`}\r\n                            value={settings.email}\r\n                            onChange={(e) => handleSettingChange('email', e.target.value)}\r\n                            aria-describedby={getFieldError('email') ? 'email-error' : 'email-help'}\r\n                            aria-invalid={!!getFieldError('email')}\r\n                            required\r\n                          />\r\n                        </div>\r\n                        {getFieldError('email') ? (\r\n                          <div id=\"email-error\" className=\"invalid-feedback\" role=\"alert\">\r\n                            {getFieldError('email')}\r\n                          </div>\r\n                        ) : (\r\n                          <div id=\"email-help\" className=\"form-text\">\r\n                            {t('settingsEmailHelp')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Phone */}\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\" htmlFor=\"phone\">{t('settingsPhoneLabel')}</label>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-text\">\r\n                            <DevicePhoneMobileIcon className=\"input-icon\" />\r\n                          </span>\r\n                          <input\r\n                            id=\"phone\"\r\n                            type=\"tel\"\r\n                            className={`form-control ${getFieldError('phone') ? 'is-invalid' : ''} ${isFieldValid('phone') ? 'is-valid' : ''}`}\r\n                            value={settings.phone}\r\n                            onChange={(e) => handleSettingChange('phone', e.target.value)}\r\n                            aria-describedby={getFieldError('phone') ? 'phone-error' : 'phone-help'}\r\n                            aria-invalid={!!getFieldError('phone')}\r\n                            placeholder=\"+1 (555) 123-4567\"\r\n                          />\r\n                        </div>\r\n                        {getFieldError('phone') ? (\r\n                          <div id=\"phone-error\" className=\"invalid-feedback\" role=\"alert\">\r\n                            {getFieldError('phone')}\r\n                          </div>\r\n                        ) : (\r\n                          <div id=\"phone-help\" className=\"form-text\">\r\n                            {t('settingsPhoneHelp')}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      {/* Bio */}\r\n                      <div className=\"col-12\">\r\n                        <label className=\"form-label\" htmlFor=\"bio\">{t('settingsBioLabel')}</label>\r\n                        <textarea\r\n                          id=\"bio\"\r\n                          className={`form-control ${getFieldError('bio') ? 'is-invalid' : ''} ${isFieldValid('bio') ? 'is-valid' : ''}`}\r\n                          rows=\"3\"\r\n                          value={settings.bio}\r\n                          onChange={(e) => handleSettingChange('bio', e.target.value)}\r\n                          placeholder={t('settingsBioPlaceholder')}\r\n                          aria-describedby={getFieldError('bio') ? 'bio-error' : 'bio-help'}\r\n                          aria-invalid={!!getFieldError('bio')}\r\n                          maxLength=\"500\"\r\n                        />\r\n                        {getFieldError('bio') ? (\r\n                          <div id=\"bio-error\" className=\"invalid-feedback\" role=\"alert\">\r\n                            {getFieldError('bio')}\r\n                          </div>\r\n                        ) : null}\r\n                        <div id=\"bio-help\" className=\"form-text\">\r\n                          {settings.bio ? t('settingsCharCount', { count: settings.bio.length }) : t('settingsCharCount', { count: 0 })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Notifications Tab */}\r\n                {activeTab === 'notifications' && (\r\n                  <div className=\"settings-section\">\r\n                    <h4 className=\"section-title d-flex align-items-center gap-2 mb-4\">\r\n                      <BellIcon className=\"section-icon\" />\r\n                      {t('settingsNotificationHeading')}\r\n                    </h4>\r\n                    \r\n                    <div className=\"settings-group\">\r\n                      <h6 className=\"settings-group-title\">{t('settingsCommunication')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.emailNotifications}\r\n                              onChange={(e) => handleSettingChange('emailNotifications', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsEmailNotificationsLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsEmailNotificationsDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.pushNotifications}\r\n                              onChange={(e) => handleSettingChange('pushNotifications', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsPushNotificationsLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsPushNotificationsDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.smsNotifications}\r\n                              onChange={(e) => handleSettingChange('smsNotifications', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsSmsNotificationsLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsSmsNotificationsDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"settings-group\">\r\n                      <h6 className=\"settings-group-title\">{t('settingsContentAlerts')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.jobAlerts}\r\n                              onChange={(e) => handleSettingChange('jobAlerts', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsJobAlertsLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsJobAlertsDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.messageAlerts}\r\n                              onChange={(e) => handleSettingChange('messageAlerts', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsMessageAlertsLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsMessageAlertsDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Privacy Tab */}\r\n                {activeTab === 'privacy' && (\r\n                  <div className=\"settings-section\">\r\n                    <h4 className=\"section-title d-flex align-items-center gap-2 mb-4\">\r\n                      <ShieldCheckIcon className=\"section-icon\" />\r\n                      {t('settingsPrivacyHeading')}\r\n                    </h4>\r\n                    \r\n                    <div className=\"settings-group\">\r\n                      <h6 className=\"settings-group-title\">{t('settingsProfileVisibility')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <select\r\n                            className=\"form-select\"\r\n                            value={settings.profileVisibility}\r\n                            onChange={(e) => handleSettingChange('profileVisibility', e.target.value)}\r\n                          >\r\n                            <option value=\"public\">{t('settingsPublicOption')}</option>\r\n                            <option value=\"registered\">{t('settingsRegisteredOption')}</option>\r\n                            <option value=\"private\">{t('settingsPrivateOption')}</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.showEmail}\r\n                              onChange={(e) => handleSettingChange('showEmail', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsShowEmailLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsShowEmailDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.showPhone}\r\n                              onChange={(e) => handleSettingChange('showPhone', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsShowPhoneLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsShowPhoneDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-check form-switch\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              checked={settings.allowMessages}\r\n                              onChange={(e) => handleSettingChange('allowMessages', e.target.checked)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {t('settingsAllowMessagesLabel')}\r\n                              <small className=\"text-muted d-block\">{t('settingsAllowMessagesDesc')}</small>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Preferences Tab */}\r\n                {activeTab === 'preferences' && (\r\n                  <div className=\"settings-section\">\r\n                    <h4 className=\"section-title d-flex align-items-center gap-2 mb-4\">\r\n                      <GlobeAltIcon className=\"section-icon\" />\r\n                      {t('settingsPreferencesHeading')}\r\n                    </h4>\r\n                    \r\n                    <div className=\"row g-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">{t('settingsLanguageLabel')}</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={settings.language}\r\n                          onChange={(e) => handleSettingChange('language', e.target.value)}\r\n                        >\r\n                          <option value=\"en\">English</option>\r\n                          <option value=\"si\">සිංහල</option>\r\n                          <option value=\"es\">Español</option>\r\n                          <option value=\"fr\">Français</option>\r\n                          <option value=\"de\">Deutsch</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">{t('settingsCurrencyLabel')}</label>\r\n                        <select\r\n                          className=\"form-select\"\r\n                          value={settings.currency}\r\n                          onChange={(e) => handleSettingChange('currency', e.target.value)}\r\n                        >\r\n                          <option value=\"USD\">USD - US Dollar</option>\r\n                          <option value=\"EUR\">EUR - Euro</option>\r\n                          <option value=\"GBP\">GBP - British Pound</option>\r\n                          <option value=\"CAD\">CAD - Canadian Dollar</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"settings-group\">\r\n                          <h5 className=\"settings-group-title d-flex align-items-center gap-2\">\r\n                            <EyeIcon className=\"section-icon\" style={{width: '20px', height: '20px'}} />\r\n                            {t('settingsThemeAppearance')}\r\n                          </h5>\r\n                          <p className=\"text-muted mb-3\">{t('settingsThemeDescription')}</p>\r\n                          \r\n                          <div className=\"theme-toggle-container d-flex gap-3 flex-wrap justify-content-center\">\r\n                            <button\r\n                              className={`theme-pill day ${!isDark ? 'active' : ''}`}\r\n                              onClick={() => !isDark || toggleTheme()}\r\n                              aria-pressed={!isDark}\r\n                              aria-label=\"Switch to light theme - Day Mode\"\r\n                              title=\"Light Theme\"\r\n                            >\r\n                              <span className=\"pill-text\">{t('settingsDayMode')}</span>\r\n                              <span className=\"pill-icon-wrapper\">\r\n                                <SunIcon className=\"pill-icon\" />\r\n                              </span>\r\n                            </button>\r\n\r\n                            <button\r\n                              className={`theme-pill night ${isDark ? 'active' : ''}`}\r\n                              onClick={() => isDark || toggleTheme()}\r\n                              aria-pressed={isDark}\r\n                              aria-label=\"Switch to dark theme - Night Mode\"\r\n                              title=\"Dark Theme\"\r\n                            >\r\n                              <span className=\"pill-icon-wrapper\">\r\n                                <MoonIcon className=\"pill-icon\" />\r\n                              </span>\r\n                              <span className=\"pill-text\">{t('settingsNightMode')}</span>\r\n                            </button>\r\n                          </div>\r\n                          \r\n                          <div className=\"theme-preview mt-3 text-center\">\r\n                            <small className=\"text-muted\">\r\n                              {isDark ? (\r\n                                <span>🌙 {t('settingsDarkThemePreview')}</span>\r\n                              ) : (\r\n                                <span>☀️ {t('settingsLightThemePreview')}</span>\r\n                              )}\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"form-check form-switch\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            checked={settings.autoSave}\r\n                            onChange={(e) => handleSettingChange('autoSave', e.target.checked)}\r\n                          />\r\n                          <label className=\"form-check-label\">\r\n                            {t('settingsAutoSaveLabel')}\r\n                            <small className=\"text-muted d-block\">{t('settingsAutoSaveDesc')}</small>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"form-check form-switch\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            checked={settings.compactView}\r\n                            onChange={(e) => handleSettingChange('compactView', e.target.checked)}\r\n                          />\r\n                          <label className=\"form-check-label\">\r\n                            {t('settingsCompactViewLabel')}\r\n                            <small className=\"text-muted d-block\">{t('settingsCompactViewDesc')}</small>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Account Tab */}\r\n                {activeTab === 'account' && (\r\n                  <div className=\"settings-section\">\r\n                    <h4 className=\"section-title d-flex align-items-center gap-2 mb-4\">\r\n                      <KeyIcon className=\"section-icon\" />\r\n                      {t('settingsAccountHeading')}\r\n                    </h4>\r\n                    \r\n                    <div className=\"settings-group\">\r\n                      <h6 className=\"settings-group-title\">{t('settingsSecurityGroup')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <button className=\"btn btn-outline-primary\">\r\n                            {t('settingsChangePasswordBtn')}\r\n                          </button>\r\n                          <small className=\"text-muted d-block mt-1\">\r\n                            {t('settingsPasswordLastChanged')}\r\n                          </small>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <button className=\"btn btn-outline-secondary\">\r\n                            {t('settingsEnable2FABtn')}\r\n                          </button>\r\n                          <small className=\"text-muted d-block mt-1\">\r\n                            {t('settings2FADesc')}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"settings-group\">\r\n                      <h6 className=\"settings-group-title\">{t('settingsDataManagementGroup')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <button className=\"btn btn-outline-info\">\r\n                            {t('settingsDownloadDataBtn')}\r\n                          </button>\r\n                          <small className=\"text-muted d-block mt-1\">\r\n                            {t('settingsDownloadDataDesc')}\r\n                          </small>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <button className=\"btn btn-outline-warning\">\r\n                            {t('settingsDeactivateAccountBtn')}\r\n                          </button>\r\n                          <small className=\"text-muted d-block mt-1\">\r\n                            {t('settingsDeactivateAccountDesc')}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"settings-group danger-zone\">\r\n                      <h6 className=\"settings-group-title text-danger\">{t('settingsDangerZone')}</h6>\r\n                      <div className=\"row g-3\">\r\n                        <div className=\"col-12\">\r\n                          <button \r\n                            className=\"btn btn-outline-danger\"\r\n                            onClick={() => setShowDeleteModal(true)}\r\n                            disabled={pendingDeletion}\r\n                          >\r\n                            <TrashIcon className=\"me-2\" style={{width: '16px', height: '16px'}} />\r\n                            {pendingDeletion ? t('settingsDeletionPending') : t('settingsDeleteAccountBtn')}\r\n                          </button>\r\n                          <small className=\"text-muted d-block mt-1\">\r\n                            {t('settingsDeleteAccountDesc')}\r\n                          </small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Save Button */}\r\n                <div className=\"settings-actions mt-4 pt-3 border-top\">\r\n                  <button \r\n                    className=\"btn btn-primary me-2\"\r\n                    onClick={handleSaveSettings}\r\n                    disabled={saving || !hasChanges || hasValidationErrors}\r\n                  >\r\n                    {saving ? (\r\n                      <>\r\n                        <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                        {t('settingsSaving')}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <CheckIcon className=\"me-2\" style={{width: '16px', height: '16px'}} />\r\n                        {t('settingsSaveChanges')}\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                  <button \r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={handleResetToDefaults}\r\n                  >\r\n                    {t('settingsResetToDefaults')}\r\n                  </button>\r\n                  {hasChanges && (\r\n                    <small className=\"text-warning ms-3\">\r\n                      {t('settingsUnsavedChanges')}\r\n                    </small>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {showDeleteModal && (\r\n        <div className=\"modal show d-block\" tabIndex=\"-1\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title text-danger\">Delete Account</h5>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn-close\"\r\n                  onClick={() => setShowDeleteModal(false)}\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>Are you sure you want to delete your account? This action cannot be undone.</p>\r\n                <p className=\"text-muted\">All your data, including:</p>\r\n                <ul className=\"text-muted\">\r\n                  <li>Profile information</li>\r\n                  <li>Job applications</li>\r\n                  <li>Messages and conversations</li>\r\n                  <li>Work history</li>\r\n                </ul>\r\n                <p className=\"text-muted\">will be permanently deleted.</p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setShowDeleteModal(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-danger\"\r\n                  onClick={handleDeleteAccount}\r\n                >\r\n                  Yes, Delete My Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Verification Modal */}\r\n      {showVerificationModal && (\r\n        <div className=\"modal show d-block\" tabIndex=\"-1\">\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  Verify {verificationType === 'email' ? 'Email' : 'Phone'}\r\n                </h5>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn-close\"\r\n                  onClick={() => {\r\n                    setShowVerificationModal(false);\r\n                    setVerificationCode('');\r\n                  }}\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>\r\n                  We've sent a verification code to your {verificationType === 'email' ? 'email' : 'phone'}:\r\n                </p>\r\n                <p className=\"fw-bold text-primary\">{verificationTarget}</p>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Verification Code</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={verificationCode}\r\n                    onChange={(e) => setVerificationCode(e.target.value)}\r\n                    placeholder=\"Enter 6-digit code\"\r\n                    maxLength=\"6\"\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <small className=\"text-muted\">\r\n                    Didn't receive the code?\r\n                  </small>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-link btn-sm\"\r\n                    onClick={handleResendCode}\r\n                  >\r\n                    Resend Code\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setShowVerificationModal(false);\r\n                    setVerificationCode('');\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleVerifyCode}\r\n                  disabled={verifying || !verificationCode.trim()}\r\n                >\r\n                  {verifying ? (\r\n                    <>\r\n                      <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                      Verifying...\r\n                    </>\r\n                  ) : (\r\n                    'Verify'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"names":["BellIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ShieldCheckIcon","GlobeAltIcon","KeyIcon","EnvelopeIcon","DevicePhoneMobileIcon","EyeIcon","SunIcon","MoonIcon","TrashIcon","CheckIcon","Settings","t","i18n","useTranslation","darkMode","isDark","toggleTheme","useTheme","navigate","useNavigate","settings","setSettings","useState","firstName","lastName","email","phone","bio","emailNotifications","pushNotifications","smsNotifications","jobAlerts","messageAlerts","profileVisibility","showEmail","showPhone","allowMessages","language","currency","timezone","autoSave","compactView","activeTab","setActiveTab","showDeleteConfirm","setShowDeleteConfirm","loading","setLoading","saving","setSaving","hasChanges","setHasChanges","showVerificationModal","setShowVerificationModal","verificationData","setVerificationData","type","value","code","showDeleteModal","setShowDeleteModal","validationErrors","setValidationErrors","fieldTouched","setFieldTouched","verificationCode","setVerificationCode","verifying","setVerifying","user","setUser","undoTimeout","setUndoTimeout","pendingDeletion","setPendingDeletion","getFieldError","key","isFieldValid","hasValidationErrors","values","some","Boolean","useEffect","async","data","api","get","savedSettings","localStorage","getItem","localSettings","JSON","parse","prev","undefined","error","console","toast","fetchUserData","handleSettingChange","fieldErrors","validateField","errors","trim","test","replace","length","keys","newSettings","prefsKey","existing","setItem","stringify","dense","currentSettings","setTimeout","handleSaveSettings","handleUndoDelete","toastId","clearTimeout","dismiss","success","position","autoClose","executeAccountDeletion","delete","clear","sessionStorage","emailChanged","phoneChanged","updateData","name","response","patch","post","setVerificationType","setVerificationTarget","info","emailError","_emailError$response","status","warning","phoneError","_phoneError$response","changeLanguage","_error$response","_error$response3","_error$response4","_error$response5","_error$response6","_error$response2","_error$response2$data","errorMessage","message","tabs","label","icon","UserIcon","_jsxs","className","children","_jsx","map","tab","IconComponent","onClick","htmlFor","onChange","e","target","required","role","placeholder","rows","maxLength","count","checked","style","width","height","disabled","_Fragment","handleResetToDefaults","window","confirm","tabIndex","hideProgressBar","closeOnClick","pauseOnHover","draggable","onClose","timeout","verificationType","verificationTarget","_error$response7"],"sourceRoot":""}