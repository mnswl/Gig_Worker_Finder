{"version":3,"file":"static/js/682.e2e4849e.chunk.js","mappings":"+LA0KA,QApKA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,UACxBK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GACjCO,EAAQC,aAAaC,QAAQ,SAEnC,IAAIC,EAAYF,aAAaC,QAAQ,UACrC,IAAKC,GAAaH,EAChB,IACE,MAAMI,EAAUC,KAAKC,MAAMC,KAAKP,EAAMQ,MAAM,KAAK,KACjDL,EAAYC,EAAQK,EACtB,CAAE,MAAMC,GAAiB,EAG3BC,EAAAA,EAAAA,WAAU,KACWC,WACjB,IACE,MAAMC,QAAYC,EAAAA,EAAIC,IAAI,eAAgB,CAAEC,QAAS,CAAEC,cAAe,UAAUjB,OAChFR,EAASqB,EAAIK,KACf,CAAE,MAAOC,GACPC,QAAQC,MAAMF,GACdG,MAAM,uBACR,CAAC,QACCvB,GAAW,GAEX,IACE,MAAMwB,QAAaT,EAAAA,EAAIC,IAAI,cAAe,CAAEC,QAAS,CAAEC,cAAe,UAAUjB,OAChFL,EAAQ4B,EAAKL,KACf,CAAE,MAAMC,GAAMC,QAAQC,MAAMF,EAAK,CACnC,GAEFK,IACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAOC,IAAI,UACXD,EAAAA,EAAOC,IAAI,cACXD,EAAAA,EAAOC,IAAI,cACXD,EAAAA,EAAOC,IAAI,mBACXD,EAAAA,EAAOC,IAAI,mBACXD,EAAAA,EAAOE,GAAG,SAAUC,IAAc,IAAb,IAAEC,GAAKD,EAC1BlC,EAAQoC,GAAQ,CAACD,KAAQC,MAE3BL,EAAAA,EAAOE,GAAG,aAAcI,IAAqB,IAApB,MAAEC,EAAK,IAAEH,GAAKE,EACrCrC,EAAQoC,GAAQA,EAAKG,IAAIC,GAAKA,EAAEC,MAAQH,EAAQH,EAAMK,MAExDT,EAAAA,EAAOE,GAAG,aAAcS,IAA0B,IAAzB,MAAEJ,EAAK,SAAEK,GAAUD,EACzC1C,EAAQoC,GAAQA,EAAKQ,OAAOJ,GAAKA,EAAEC,MAAQH,IAC3CO,EAAAA,GAAMC,KAAK,eAAcH,EAAW,KAAKA,EAAW,OAEvDZ,EAAAA,EAAOE,GAAG,kBAAmBc,IAAsB,IAArB,IAAEC,EAAG,OAAEC,GAAQF,EAC3C/C,EAAQoC,GAAQA,EAAKG,IAAIC,GAAKQ,EAAIE,SAASV,EAAEC,KAAO,IAAKD,KAAMS,GAAWT,MAE5ET,EAAAA,EAAOE,GAAG,kBAAmBkB,IAAc,IAAb,IAAEH,GAAKG,EACnCnD,EAAQoC,GAAQA,EAAKQ,OAAOJ,IAAMQ,EAAIE,SAASV,EAAEC,UAElD,CAACpC,IAEJ,MAoBM+C,EAAYnC,MAAOH,EAAIuC,KAC3B,IACE,MAAMC,EAAO,CAAEjC,QAAS,CAAEC,cAAe,UAAUjB,MACnD,GAAe,WAAXgD,QACIlC,EAAAA,EAAIoC,OAAO,eAAezC,IAAMwC,GACtCtD,EAAQoC,GAAQA,EAAKQ,OAAOJ,GAAKA,EAAEC,MAAQ3B,QACtC,CACL,MACMqB,SADYhB,EAAAA,EAAIqC,IAAI,eAAe1C,KAAMuC,IAAU,CAAC,EAAGC,IAC7C/B,KAAKY,KAAO,KAC5BnC,EAAQoC,GAAQA,EAAKG,IAAIC,GAAKA,EAAEC,MAAQ3B,GAAMqB,GAAiBK,GACjE,CACF,CAAE,MAAMhB,GAAMC,QAAQC,MAAMF,GAAMG,MAAM,gBAAkB,GAG5D,OAAIxB,GAAgBsD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAC,gBAGlDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASC,SAAC,qBACxBC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,oBAAmBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,UAACF,EAAAA,EAAAA,KAAA,UAAQC,UAAW,aAAkB,UAANzD,EAAc,SAAS,IAAM4D,QAASA,IAAI3D,EAAO,SAASyD,SAAC,aACnHF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUC,UAACF,EAAAA,EAAAA,KAAA,UAAQC,UAAW,aAAkB,SAANzD,EAAa,SAAS,IAAM4D,QAASA,IAAI3D,EAAO,QAAQyD,SAAC,cAG5G,UAAN1D,IACD2D,EAAAA,EAAAA,MAAA,SAAOF,UAAU,sBAAqBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,QACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,eAGJA,EAAAA,EAAAA,KAAA,SAAAE,SACG/D,EAAM2C,IAAIuB,IACTF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAErB,OACPgB,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAEC,QACPH,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAKG,EAAEE,MAAOF,EAAErB,MAAQjC,EAAY,QAAU,OAC9CiD,EAAAA,EAAAA,KAAA,MAAAE,UAAKM,EAAAA,EAAAA,GAAYH,EAAEI,SACnBT,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wBAAwBG,QAASA,IA/D9C5C,WAEb,GADWT,GAAa2D,OAAOrD,KAAQqD,OAAO3D,IAGhD,GAAiB,sBADA4D,OAAO,wCACc,YAGtC,GAAoB,SADAA,OAAO,iDACC,OAG9B,UACQjD,EAAAA,EAAIoC,OAAO,gBAAgBzC,IAAM,CAAEO,QAAS,CAAEC,cAAe,UAAUjB,OAC7ER,EAASD,EAAMgD,OAAOkB,GAAKA,EAAErB,MAAQ3B,GACvC,CAAE,MAAOU,GACPC,QAAQC,MAAMF,GACdG,MAAM,gBACR,GA+CqE0C,CAAWP,EAAErB,KAAKkB,SAAC,eANvEG,EAAErB,WAaV,SAANxC,IACD2D,EAAAA,EAAAA,MAAA,SAAOF,UAAU,sBAAqBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,QACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,eAGJA,EAAAA,EAAAA,KAAA,SAAAE,SACG5D,EAAKwC,IAAIC,IAAC,IAAA8B,EAAA,OACTV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKnB,EAAEC,OACPgB,EAAAA,EAAAA,KAAA,MAAAE,SAAKnB,EAAE+B,SACPd,EAAAA,EAAAA,KAAA,MAAAE,UAAe,QAAVW,EAAA9B,EAAEgC,gBAAQ,IAAAF,OAAA,EAAVA,EAAYP,OAAQ,YACzBN,EAAAA,EAAAA,KAAA,MAAAE,SAAKnB,EAAEiC,UACPhB,EAAAA,EAAAA,KAAA,MAAAE,SAAKnB,EAAEkC,SAAW,SAAM,MACxBd,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACgB,aAAbnB,EAAEiC,SAAyBhB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA8BG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,WAAWkB,SAAC,YACzG,aAAbnB,EAAEiC,SAAyBhB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA8BG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,UAAUkB,SAAC,WACxG,cAAbnB,EAAEiC,SAA0BhB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gCAAgCG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,WAAWkB,SAAC,YAC5G,cAAbnB,EAAEiC,SAA0BhB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,2BAA2BG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,aAAakB,SAAC,cACtHnB,EAAEkC,UAAWjB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sCAAsCG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,aAAakB,SAAC,eAAqBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA8BG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,WAAWkB,SAAC,aACnOF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wBAAwBG,QAASA,IAAMT,EAAUZ,EAAEC,IAAI,UAAUkB,SAAC,gBAZ/EnB,EAAEC,cAqBvB,C,gBCtKe,SAASwB,EAAYC,GAClC,MAAa,WAATA,EAA0B,aACjB,aAATA,EAA4B,UACrB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMS,OAAO,GAAGC,gBAAoB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,MAAM,GACrD,C","sources":["pages/AdminDashboard.jsx","utils/roleDisplay.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../api';\r\nimport roleDisplay from '../utils/roleDisplay';\r\nimport { socket, connectSocket } from '../socket';\r\n\r\nfunction AdminDashboard() {\r\n  const [users, setUsers] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [tab, setTab] = useState('users');\r\n  const [loading, setLoading] = useState(true);\r\n  const token = localStorage.getItem('token');\r\n  // Determine current admin id\r\n  let currentId = localStorage.getItem('userId');\r\n  if (!currentId && token) {\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      currentId = payload.id;\r\n    } catch(e) { /* ignore */ }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await api.get('/admin/users', { headers: { Authorization: `Bearer ${token}` } });\r\n        setUsers(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert('Failed to load users');\r\n      } finally {\r\n        setLoading(false);\r\n        // fetch jobs after users so token confirmed\r\n        try {\r\n          const resJ = await api.get('/admin/jobs', { headers: { Authorization: `Bearer ${token}` } });\r\n          setJobs(resJ.data);\r\n        } catch(err){ console.error(err);}\r\n      }\r\n    };\r\n    fetchUsers();\r\n    connectSocket();\r\n    socket.off('newJob');\r\n    socket.off('jobUpdated');\r\n    socket.off('jobDeleted');\r\n    socket.off('bulkJobsUpdated');\r\n    socket.off('bulkJobsDeleted');\r\n    socket.on('newJob', ({ job }) => {\r\n      setJobs(prev => [job, ...prev]);\r\n    });\r\n    socket.on('jobUpdated', ({ jobId, job }) => {\r\n      setJobs(prev => prev.map(j => j._id === jobId ? job : j));\r\n    });\r\n    socket.on('jobDeleted', ({ jobId, jobTitle }) => {\r\n       setJobs(prev => prev.filter(j => j._id !== jobId));\r\n       toast.info(`Job deleted${jobTitle ? ': '+jobTitle : ''}`);\r\n     });\r\n    socket.on('bulkJobsUpdated', ({ ids, update }) => {\r\n      setJobs(prev => prev.map(j => ids.includes(j._id) ? { ...j, ...update } : j));\r\n    });\r\n    socket.on('bulkJobsDeleted', ({ ids }) => {\r\n      setJobs(prev => prev.filter(j => !ids.includes(j._id)));\r\n    });\r\n  }, [token]);\r\n\r\n  const deleteUser = async (id) => {\r\n    const isSelf = currentId && String(id) === String(currentId);\r\n        if (isSelf) {\r\n      const selfText = prompt(\"Type 'Delete My Account' to confirm.\");\r\n      if (selfText !== 'Delete My Account') return;\r\n    } else {\r\n      const confirmText = prompt(\"Type 'OkAy' to confirm deletion of this user.\");\r\n      if (confirmText !== 'OkAy') return;\r\n    }\r\n    // confirmation handled above\r\n    try {\r\n      await api.delete(`/admin/users/${id}`, { headers: { Authorization: `Bearer ${token}` } });\r\n      setUsers(users.filter(u => u._id !== id));\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Delete failed');\r\n    }\r\n  };\r\n\r\n  // Job action helpers\r\n  const jobAction = async (id, action) => {\r\n    try {\r\n      const auth = { headers: { Authorization: `Bearer ${token}` } };\r\n      if (action === 'delete') {\r\n        await api.delete(`/admin/jobs/${id}`, auth);\r\n        setJobs(prev => prev.filter(j => j._id !== id));\r\n      } else {\r\n        const res = await api.put(`/admin/jobs/${id}/${action}`, {}, auth);\r\n        const job = res.data.job || null;\r\n        setJobs(prev => prev.map(j => j._id === id ? (job ? job : j) : j));\r\n      }\r\n    } catch(err){ console.error(err); alert('Action failed'); }\r\n  };\r\n\r\n  if (loading) return <p className=\"mt-5 text-center\">Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"h4 mb-3\">Admin Dashboard</h2>\r\n      <ul className=\"nav nav-tabs mb-3\">\r\n        <li className=\"nav-item\"><button className={`nav-link ${tab==='users'?'active':''}`} onClick={()=>setTab('users')}>Users</button></li>\r\n        <li className=\"nav-item\"><button className={`nav-link ${tab==='jobs'?'active':''}`} onClick={()=>setTab('jobs')}>Gigs</button></li>\r\n      </ul>\r\n\r\n      {tab==='users' && (\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(u => (\r\n            <tr key={u._id}>\r\n              <td>{u._id}</td>\r\n              <td>{u.name}</td>\r\n              <td>{u.email}{u._id === currentId ? ' (me)' : ''}</td>\r\n              <td>{roleDisplay(u.role)}</td>\r\n              <td>\r\n                <button className=\"btn btn-sm btn-danger\" onClick={() => deleteUser(u._id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      )}\r\n      {tab==='jobs' && (\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Title</th>\r\n            <th>Employer</th>\r\n            <th>Status</th>\r\n            <th>Featured</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobs.map(j => (\r\n            <tr key={j._id}>\r\n              <td>{j._id}</td>\r\n              <td>{j.title}</td>\r\n              <td>{j.employer?.name || '—'}</td>\r\n              <td>{j.status}</td>\r\n              <td>{j.featured ? '★' : ''}</td>\r\n              <td>\r\n                {j.status !== 'approved' && <button className=\"btn btn-sm btn-success me-1\" onClick={() => jobAction(j._id,'approve')}>Approve</button>}\r\n                {j.status !== 'rejected' && <button className=\"btn btn-sm btn-warning me-1\" onClick={() => jobAction(j._id,'reject')}>Reject</button>}\r\n                {j.status !== 'suspended' && <button className=\"btn btn-sm btn-secondary me-1\" onClick={() => jobAction(j._id,'suspend')}>Suspend</button>}\r\n                {j.status === 'suspended' && <button className=\"btn btn-sm btn-info me-1\" onClick={() => jobAction(j._id,'unsuspend')}>Unsuspend</button>}\r\n                {j.featured ? <button className=\"btn btn-sm btn-outline-primary me-1\" onClick={() => jobAction(j._id,'unfeature')}>Unfeature</button> : <button className=\"btn btn-sm btn-primary me-1\" onClick={() => jobAction(j._id,'feature')}>Feature</button>}\r\n                <button className=\"btn btn-sm btn-danger\" onClick={() => jobAction(j._id,'delete')}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","// Utility to map internal role codes to user-friendly display names.\r\n// Usage: roleDisplay(user.role)\r\nexport default function roleDisplay(role) {\r\n  if (role === 'worker') return 'Freelancer';\r\n  if (role === 'employer') return 'Client';\r\n  return role?.charAt(0).toUpperCase() + role?.slice(1);\r\n}\r\n"],"names":["users","setUsers","useState","jobs","setJobs","tab","setTab","loading","setLoading","token","localStorage","getItem","currentId","payload","JSON","parse","atob","split","id","e","useEffect","async","res","api","get","headers","Authorization","data","err","console","error","alert","resJ","fetchUsers","connectSocket","socket","off","on","_ref","job","prev","_ref2","jobId","map","j","_id","_ref3","jobTitle","filter","toast","info","_ref4","ids","update","includes","_ref5","jobAction","action","auth","delete","put","_jsx","className","children","_jsxs","onClick","u","name","email","roleDisplay","role","String","prompt","deleteUser","_j$employer","title","employer","status","featured","charAt","toUpperCase","slice"],"sourceRoot":""}